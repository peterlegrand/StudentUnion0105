<div>Icons made by <a href="https://www.flaticon.com/authors/smashicons" title="Smashicons">Smashicons</a> from <a href="https://www.flaticon.com/"     title="Flaticon">www.flaticon.com</a> is licensed by <a href="http://creativecommons.org/licenses/by/3.0/"     title="Creative Commons BY 3.0" target="_blank">CC 3.0 BY</a></div>


ALTER PROCEDURE OrgStructure (@Language Int )
AS 
WITH StructureOrg (ParentId, Id, Name, Level, Path)
AS
(
	SELECT o.ParentOrganizationId
		, o.Id
		, l.Name
		, 0 AS level
		, CAST(o.Id AS VARCHAR(255)) AS Path
	FROM dbOrganization AS o
	JOIN dbOrganizationLanguage AS l
		ON o.Id = l.OrganizationId
	WHERE o.ParentOrganizationId IS NULL
		AND l.LanguageId = @Language
	UNION ALL
	SELECT o.ParentOrganizationId
		, o.Id
		, l.Name
		, level + 1
		, CAST(s.Path + '.' + CAST(o.Id AS VARCHAR(255)) AS VARCHAR(255))
	FROM dbOrganization AS o
	JOIN dbOrganizationLanguage AS l
		ON o.Id = l.OrganizationId
	JOIN StructureOrg s
		ON s.Id = o.ParentOrganizationId
	WHERE l.LanguageId = @Language
	)

	SELECT ISNULL(ParentId,0) ParentId
	, Id, Name, Level, Path
	FROM StructureOrg ORDER BY Path;

	-- SECOND SP

	ALTER PROCEDURE ClassificationValueStructure (@Language Int, @ClassificationId int)
AS 
WITH StructureClassificationValue (ParentId
	, Id
	, ClassificationId
	, ClassificationValueName
	, Level
	, Path)
AS
(
	SELECT c.ParentValueId
		, c.Id
		, c.ClassificationId
		, l.ClassificationValueName
		, 0 AS level
		, CAST(c.Id AS VARCHAR(255)) AS Path
	FROM dbClassificationValue AS c
	JOIN dbClassificationValueLanguage AS l
		ON c.Id = l.ClassificationValueId
	WHERE c.ParentValueId IS NULL
		AND l.LanguageId = @Language
		AND c.ClassificationId = @ClassificationId
	UNION ALL
	SELECT c.ParentValueId
		, c.Id
		, c.ClassificationId
		, l.ClassificationValueName
		, level + 1
		, CAST(s.Path + '.' + CAST(c.Id AS VARCHAR(255)) AS VARCHAR(255))
	FROM dbClassificationValue AS c
	JOIN dbClassificationValueLanguage AS l
		ON c.Id = l.ClassificationValueId
	JOIN StructureClassificationValue s
		ON s.Id = c.ParentValueId
	WHERE l.LanguageId = @Language
		AND c.ClassificationId = @ClassificationId
	)

	SELECT ISNULL(ParentId,0) ParentId, ClassificationId,
	 Id, ClassificationValueName, Level, Path
	FROM StructureClassificationValue ORDER BY Path;
	
	




