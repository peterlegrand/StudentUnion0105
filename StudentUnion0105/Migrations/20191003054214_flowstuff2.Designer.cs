// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentUnion0105.Data;

namespace StudentUnion0105.Migrations
{
    [DbContext(typeof(SuDbContext))]
    [Migration("20191003054214_flowstuff2")]
    partial class flowstuff2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "f1c71d4d-dbc3-494b-9241-0c1f3ab402c5",
                            ConcurrencyStamp = "d75c9019-ea45-4cb3-9bf0-5f143447c522",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "6f3f3c99-6182-4248-89fc-a4a52844dc74",
                            ConcurrencyStamp = "9b83948e-7890-41a3-8d85-cf7c0e31646b",
                            Name = "Super admin",
                            NormalizedName = "SUPER ADMIN"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Claim");

                    b.Property<string>("ClaimGroup");

                    b.Property<string>("ClaimType");

                    b.HasKey("Id");

                    b.ToTable("dbClaim");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClassificationDescription");

                    b.Property<int>("ClassificationId");

                    b.Property<string>("ClassificationMenuName");

                    b.Property<string>("ClassificationMouseOver");

                    b.Property<string>("ClassificationName");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid>("CreatorId");

                    b.Property<int>("LanguageId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<Guid>("ModifierId");

                    b.HasKey("Id");

                    b.HasIndex("ClassificationId");

                    b.HasIndex("LanguageId");

                    b.ToTable("dbClassificationLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationLevelLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClassificationLevelDescription");

                    b.Property<int>("ClassificationLevelId");

                    b.Property<string>("ClassificationLevelMenuName");

                    b.Property<string>("ClassificationLevelMouseOver");

                    b.Property<string>("ClassificationLevelName");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid>("CreatorId");

                    b.Property<int>("LanguageId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<Guid>("ModifierId");

                    b.HasKey("Id");

                    b.HasIndex("ClassificationLevelId");

                    b.HasIndex("LanguageId");

                    b.ToTable("dbClassificationLevelLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationLevelModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Alphabetically");

                    b.Property<bool>("CanLink");

                    b.Property<int>("ClassificationId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid>("CreatorId");

                    b.Property<int>("DateLevel");

                    b.Property<bool>("InDropDown");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<Guid>("ModifierId");

                    b.Property<bool>("OnTheFly");

                    b.Property<int>("Sequence");

                    b.HasKey("Id");

                    b.HasIndex("ClassificationId");

                    b.ToTable("dbClassificationLevel");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassificationStatusId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid>("CreatorId");

                    b.Property<int>("DefaultClassificationPageId");

                    b.Property<int>("DropDownSequence");

                    b.Property<bool>("HasDropDown");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<Guid>("ModifierId");

                    b.HasKey("Id");

                    b.HasIndex("ClassificationStatusId");

                    b.ToTable("dbClassification");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationStatusModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClassificationStatusName");

                    b.HasKey("Id");

                    b.ToTable("dbClassificationStatus");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationValueLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClassificationValueDescription");

                    b.Property<string>("ClassificationValueDropDownName");

                    b.Property<string>("ClassificationValueHeaderDescription");

                    b.Property<string>("ClassificationValueHeaderName");

                    b.Property<int>("ClassificationValueId");

                    b.Property<string>("ClassificationValueMenuName");

                    b.Property<string>("ClassificationValueMouseOver");

                    b.Property<string>("ClassificationValueName");

                    b.Property<string>("ClassificationValuePageDescription");

                    b.Property<string>("ClassificationValuePageName");

                    b.Property<string>("ClassificationValueTopicName");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid>("CreatorId");

                    b.Property<int>("LanguageId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<Guid>("ModifierId");

                    b.HasKey("Id");

                    b.HasIndex("ClassificationValueId");

                    b.HasIndex("LanguageId");

                    b.ToTable("dbClassificationValueLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationValueModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassificationId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid>("CreatorId");

                    b.Property<DateTimeOffset?>("DateFrom");

                    b.Property<DateTimeOffset?>("DateTo");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<Guid>("ModifierId");

                    b.Property<int?>("ParentValueId");

                    b.HasKey("Id");

                    b.HasIndex("ClassificationId");

                    b.ToTable("dbClassificationValue");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuContentClassificationValueModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassificationValueId");

                    b.Property<int>("ContentId");

                    b.HasKey("Id");

                    b.HasIndex("ClassificationValueId");

                    b.HasIndex("ContentId");

                    b.ToTable("dbContentClassificationValue");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuContentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContentStatusId");

                    b.Property<int>("ContentTypeId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid?>("CreatorId");

                    b.Property<string>("Description");

                    b.Property<int>("LanguageId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<Guid?>("ModifierId");

                    b.Property<int>("OrganizationId");

                    b.Property<int?>("ProjectId");

                    b.Property<int>("SecurityLevel");

                    b.Property<int?>("SuProcessTemplateStepFieldStatusModelId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("ContentStatusId");

                    b.HasIndex("ContentTypeId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("SecurityLevel");

                    b.HasIndex("SuProcessTemplateStepFieldStatusModelId");

                    b.ToTable("dbContent");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuContentStatusModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContentStatusName");

                    b.HasKey("Id");

                    b.ToTable("dbContentStatus");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuContentTypeLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContentTypeId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid>("CreatorId");

                    b.Property<string>("Description");

                    b.Property<int>("LanguageId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<Guid>("ModifierId");

                    b.Property<string>("MouseOver");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("ContentTypeId");

                    b.HasIndex("LanguageId");

                    b.ToTable("dbContentTypeLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuContentTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid>("CreatorId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<Guid>("ModifierId");

                    b.HasKey("Id");

                    b.ToTable("dbContentType");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuCountryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryName")
                        .IsRequired();

                    b.Property<string>("ForeignName");

                    b.Property<string>("ISO31662");

                    b.Property<string>("ISO31663");

                    b.Property<int>("ISO3166Num");

                    b.Property<string>("Region");

                    b.HasKey("Id");

                    b.ToTable("dbCountry");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuDataTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DataTypeDescription");

                    b.Property<string>("DataTypeName");

                    b.HasKey("Id");

                    b.ToTable("dbDataType");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuLanguageList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("dbLanguageList");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("ForeignName");

                    b.Property<string>("ISO6391");

                    b.Property<string>("ISO6392");

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("dbLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuMasterListModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MasterListDescription");

                    b.Property<string>("MasterListName");

                    b.Property<int>("Sequence");

                    b.HasKey("Id");

                    b.ToTable("dbMasterList");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuOrganizationLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid>("CreatorId");

                    b.Property<string>("Description");

                    b.Property<int>("LanguageId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<Guid>("ModifierId");

                    b.Property<string>("MouseOver");

                    b.Property<string>("Name");

                    b.Property<int>("OrganizationId");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("dbOrganizationLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuOrganizationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid>("CreatorId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<Guid>("ModifierId");

                    b.Property<int>("OrganizationStatusId");

                    b.Property<int>("OrganizationTypeId");

                    b.Property<int?>("ParentOrganizationId");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationStatusId");

                    b.HasIndex("OrganizationTypeId");

                    b.HasIndex("ParentOrganizationId");

                    b.ToTable("dbOrganization");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuOrganizationStatusModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("OrganizationStatusName");

                    b.HasKey("Id");

                    b.ToTable("dbOrganizationStatus");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuOrganizationTypeLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid>("CreatorId");

                    b.Property<string>("Description");

                    b.Property<int>("LanguageId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<Guid>("ModifierId");

                    b.Property<string>("MouseOver");

                    b.Property<string>("Name");

                    b.Property<int>("OrganizationTypeId");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("OrganizationTypeId");

                    b.ToTable("dbOrganizationTypeLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuOrganizationTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid>("CreatorId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<Guid>("ModifierId");

                    b.HasKey("Id");

                    b.ToTable("dbOrganizationType");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuPageLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid>("CreatorId");

                    b.Property<string>("Description");

                    b.Property<int>("LanguageId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<Guid>("ModifierId");

                    b.Property<string>("MouseOver");

                    b.Property<string>("Name");

                    b.Property<string>("PageDescription");

                    b.Property<int>("PageId");

                    b.Property<string>("PageTitle");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("PageId");

                    b.ToTable("dbPageLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuPageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid>("CreatorId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<Guid>("ModifierId");

                    b.Property<int>("PageStatusId");

                    b.Property<int>("PageTypeId");

                    b.HasKey("Id");

                    b.HasIndex("PageStatusId");

                    b.HasIndex("PageTypeId");

                    b.ToTable("dbPage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuPageSectionLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid>("CreatorId");

                    b.Property<int>("LanguageId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<Guid>("ModifierId");

                    b.Property<string>("PageSectionDescription");

                    b.Property<int>("PageSectionId");

                    b.Property<string>("PageSectionMouseOver");

                    b.Property<string>("PageSectionName");

                    b.Property<string>("PageSectionTitle");

                    b.Property<string>("PageSectionTitleDescription");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("PageSectionId");

                    b.ToTable("dbPageSectionLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuPageSectionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ContentTypeId");

                    b.Property<bool>("HasPaging");

                    b.Property<int>("MaxContent");

                    b.Property<int>("OneTwoColumns");

                    b.Property<int>("PageId");

                    b.Property<int>("PageSectionTypeId");

                    b.Property<int>("Sequence");

                    b.Property<bool>("ShowContentTypeDescription");

                    b.Property<bool>("ShowContentTypeTitle");

                    b.Property<bool>("ShowSectionTitle");

                    b.Property<bool>("ShowSectionTitleDescription");

                    b.Property<int>("SortById");

                    b.HasKey("Id");

                    b.HasIndex("ContentTypeId");

                    b.HasIndex("PageId");

                    b.HasIndex("PageSectionTypeId");

                    b.ToTable("dbPageSection");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuPageSectionTypeLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid>("CreatorId");

                    b.Property<string>("Description");

                    b.Property<int>("LanguageId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<Guid>("ModifierId");

                    b.Property<string>("MouseOver");

                    b.Property<string>("Name");

                    b.Property<int>("PageSectionTypeId");

                    b.Property<int?>("PageTypeId");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("PageTypeId");

                    b.ToTable("dbPageSectionTypeLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuPageSectionTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid>("CreatorId");

                    b.Property<bool>("IndexSection");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<Guid>("ModifierId");

                    b.HasKey("Id");

                    b.ToTable("dbPageSectionType");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuPageSectionsViewModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ContentTypeId");

                    b.Property<bool>("HasPaging");

                    b.Property<bool>("IndexSection");

                    b.Property<int>("MaxContent");

                    b.Property<int>("OneTwoColumns");

                    b.Property<int>("PageId");

                    b.Property<string>("PageSectionDescription");

                    b.Property<string>("PageSectionTitle");

                    b.Property<bool>("ShowContentTypeDescription");

                    b.Property<bool>("ShowContentTypeTitle");

                    b.Property<bool>("ShowSectionTitle");

                    b.Property<bool>("ShowSectionTitleDescription");

                    b.Property<int>("SortById");

                    b.HasKey("Id");

                    b.ToTable("dbPageSectionsViewModel");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuPageStatusModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PageStatusName");

                    b.HasKey("Id");

                    b.ToTable("dbPageStatus");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuPageTypeLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid>("CreatorId");

                    b.Property<string>("Description");

                    b.Property<int>("LanguageId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<Guid>("ModifierId");

                    b.Property<string>("MouseOver");

                    b.Property<string>("Name");

                    b.Property<int>("PageTypeId");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("PageTypeId");

                    b.ToTable("dbPageTypeLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuPageTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid>("CreatorId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<Guid>("ModifierId");

                    b.HasKey("Id");

                    b.ToTable("dbPageType");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateFieldLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid?>("CreatorId");

                    b.Property<int>("LanguageId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<Guid?>("ModifierId");

                    b.Property<string>("ProcessTemplateFieldDescription");

                    b.Property<int>("ProcessTemplateFieldId");

                    b.Property<string>("ProcessTemplateFieldMouseOver");

                    b.Property<string>("ProcessTemplateFieldName");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ProcessTemplateFieldId");

                    b.ToTable("dbProcessTemplateFieldLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateFieldModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FieldDataTypeId");

                    b.Property<int>("FieldMasterListId");

                    b.Property<int>("ProcessTemplateId");

                    b.HasKey("Id");

                    b.HasIndex("FieldDataTypeId");

                    b.HasIndex("FieldMasterListId");

                    b.HasIndex("ProcessTemplateId");

                    b.ToTable("dbProcessTemplateField");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateFieldTypeLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid?>("CreatorId");

                    b.Property<string>("Description");

                    b.Property<int>("FieldTypeId");

                    b.Property<int>("LanguageId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<Guid?>("ModifierId");

                    b.Property<string>("MouseOver");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("FieldTypeId");

                    b.HasIndex("LanguageId");

                    b.ToTable("dbProcessTemplateFieldTypeLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateFieldTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid?>("CreatorId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<Guid?>("ModifierId");

                    b.HasKey("Id");

                    b.ToTable("dbProcessTemplateFieldType");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateFlowConditionLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid?>("CreatorId");

                    b.Property<string>("Description");

                    b.Property<int>("FlowConditionId");

                    b.Property<int>("LanguageId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<Guid?>("ModifierId");

                    b.Property<string>("MouseOver");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("FlowConditionId");

                    b.HasIndex("LanguageId");

                    b.ToTable("dbProcessTemplateFlowConditionLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateFlowConditionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProcessTemplateConditionTypeId");

                    b.Property<int>("ProcessTemplateFieldId");

                    b.Property<DateTime>("ProcessTemplateFlowConditionDate");

                    b.Property<int>("ProcessTemplateFlowConditionInt");

                    b.Property<string>("ProcessTemplateFlowConditionString");

                    b.Property<int>("ProcessTemplateFlowId");

                    b.HasKey("Id");

                    b.HasIndex("ProcessTemplateConditionTypeId");

                    b.HasIndex("ProcessTemplateFlowId");

                    b.ToTable("dbProcessTemplateFlowCondition");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateFlowConditionTypeLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid?>("CreatorId");

                    b.Property<string>("Description");

                    b.Property<int>("FlowConditionTypeId");

                    b.Property<int>("LanguageId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<Guid?>("ModifierId");

                    b.Property<string>("MouseOver");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("FlowConditionTypeId");

                    b.HasIndex("LanguageId");

                    b.ToTable("dbProcessTemplateFlowConditionTypeLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateFlowConditionTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid?>("CreatorId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<Guid?>("ModifierId");

                    b.HasKey("Id");

                    b.ToTable("dbProcessTemplateFlowConditionType");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateFlowLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid?>("CreatorId");

                    b.Property<string>("Description");

                    b.Property<int>("FlowId");

                    b.Property<int>("LanguageId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<Guid?>("ModifierId");

                    b.Property<string>("MouseOver");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("FlowId");

                    b.HasIndex("LanguageId");

                    b.ToTable("dbProcessTemplateFlowLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateFlowModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProcessTemplateFromStep");

                    b.Property<int>("ProcessTemplateId");

                    b.Property<int>("ProcessTemplateToStep");

                    b.HasKey("Id");

                    b.ToTable("dbProcessTemplateFlow");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateGroupLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid?>("CreatorId");

                    b.Property<int>("LanguageId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<Guid?>("ModifierId");

                    b.Property<string>("ProcessTemplateGroupDescription");

                    b.Property<int>("ProcessTemplateGroupId");

                    b.Property<string>("ProcessTemplateGroupMouseOver");

                    b.Property<string>("ProcessTemplateGroupName");

                    b.Property<int?>("SuProcessTemplateGroupModelId");

                    b.HasKey("Id");

                    b.HasIndex("SuProcessTemplateGroupModelId");

                    b.ToTable("dbProcessTemplateGroupLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateGroupModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid?>("CreatorId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<Guid?>("ModifierId");

                    b.Property<int>("Sequence");

                    b.HasKey("Id");

                    b.ToTable("dbProcessTemplateGroup");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid?>("CreatorId");

                    b.Property<int>("LanguageId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<Guid?>("ModifierId");

                    b.Property<string>("ProcessTemplateDescription");

                    b.Property<int?>("ProcessTemplateGroupId");

                    b.Property<int>("ProcessTemplateId");

                    b.Property<string>("ProcessTemplateMouseOver");

                    b.Property<string>("ProcessTemplateName");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ProcessTemplateGroupId");

                    b.ToTable("dbProcessTemplateLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid?>("CreatorId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<Guid?>("ModifierId");

                    b.Property<int>("ProcessTemplateGroupId");

                    b.HasKey("Id");

                    b.HasIndex("ProcessTemplateGroupId");

                    b.ToTable("dbProcessTemplate");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateStepFieldModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FieldId");

                    b.Property<int>("Sequence");

                    b.Property<int>("StatusId");

                    b.Property<int>("StepId");

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.HasIndex("StatusId");

                    b.HasIndex("StepId");

                    b.ToTable("dbProcessTemplateStepField");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateStepFieldStatusModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StatusName");

                    b.HasKey("Id");

                    b.ToTable("dbProcessTemplateStepFieldStatus");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateStepLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid?>("CreatorId");

                    b.Property<int>("LanguageId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<Guid?>("ModifierId");

                    b.Property<string>("ProcessTemplateStepDescription");

                    b.Property<string>("ProcessTemplateStepMouseOver");

                    b.Property<string>("ProcessTemplateStepName");

                    b.Property<int>("StepId");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("StepId");

                    b.ToTable("dbProcessTemplateStepLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateStepModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProcessTemplateId");

                    b.HasKey("Id");

                    b.HasIndex("ProcessTemplateId");

                    b.ToTable("dbProcessTemplateStep");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProjectLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid?>("CreatorId");

                    b.Property<string>("Description");

                    b.Property<int>("LanguageId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<Guid?>("ModifierId");

                    b.Property<string>("MouseOver");

                    b.Property<string>("Name");

                    b.Property<int>("ProjectId");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ProjectId");

                    b.ToTable("dbProjectLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProjectModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid>("CreatorId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<Guid>("ModifierId");

                    b.Property<int?>("ParentProjectId");

                    b.Property<int>("ProjectStatusId");

                    b.HasKey("Id");

                    b.HasIndex("ProjectStatusId");

                    b.ToTable("dbProject");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProjectStatusModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProjectStatusName");

                    b.HasKey("Id");

                    b.ToTable("dbProjectStatus");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuSecurityLevelList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("dbSecurityLevelList");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuSecurityLevelModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("dbSecurityLevel");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuSettingModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateTimeValue");

                    b.Property<Guid?>("GuidValue");

                    b.Property<int?>("IntValue");

                    b.Property<string>("SettingDescription");

                    b.Property<string>("SettingName");

                    b.Property<string>("StringValue");

                    b.HasKey("Id");

                    b.ToTable("dbSetting");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuStatusList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("dbStatusList");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuTypeList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("dbTypeList");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<int>("DefaultLangauge");

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuValueList", b =>
                {
                    b.Property<int>("ClassificationValueId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClassificationValueName");

                    b.HasKey("ClassificationValueId");

                    b.ToTable("dbValueList");
                });

            modelBuilder.Entity("StudentUnion0105.SPModel.GetProjectStructure+SuGetProjectStructure", b =>
                {
                    b.Property<string>("Path")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Id");

                    b.Property<int>("Level");

                    b.Property<string>("Name");

                    b.Property<int>("ParentId");

                    b.HasKey("Path");

                    b.ToTable("dbGetProjectStructure");
                });

            modelBuilder.Entity("StudentUnion0105.SPModel.SuGetClassificationValueStructure", b =>
                {
                    b.Property<string>("Path")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ClassificationId");

                    b.Property<string>("ClassificationValueName");

                    b.Property<int>("Id");

                    b.Property<int>("Level");

                    b.Property<int>("ParentId");

                    b.HasKey("Path");

                    b.ToTable("dbGetClassificationValueStructure");
                });

            modelBuilder.Entity("StudentUnion0105.SPModel.SuGetOrganizationStructure", b =>
                {
                    b.Property<string>("Path")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Id");

                    b.Property<int>("Level");

                    b.Property<string>("Name");

                    b.Property<int>("ParentId");

                    b.HasKey("Path");

                    b.ToTable("dbGetOrganizationStructure");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuClassificationModel", "Classification")
                        .WithMany("ClassificationLanguages")
                        .HasForeignKey("ClassificationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany("ClassificationLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationLevelLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuClassificationLevelModel", "ClassificationLevel")
                        .WithMany("ClassificationLevelLanguages")
                        .HasForeignKey("ClassificationLevelId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany("ClassificationLevelLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationLevelModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuClassificationModel", "Classification")
                        .WithMany("ClassificationLevels")
                        .HasForeignKey("ClassificationId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuClassificationStatusModel", "ClassificationStatus")
                        .WithMany("Classifications")
                        .HasForeignKey("ClassificationStatusId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationValueLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuClassificationValueModel", "ClassificationValue")
                        .WithMany("ClassificationValueLanguages")
                        .HasForeignKey("ClassificationValueId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany("ClassificationValueLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationValueModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuClassificationModel", "Classification")
                        .WithMany("ClassificationValues")
                        .HasForeignKey("ClassificationId")
                        .HasConstraintName("FKClassificationValues")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuContentClassificationValueModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuClassificationValueModel", "ClassificationValue")
                        .WithMany()
                        .HasForeignKey("ClassificationValueId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuContentModel", "Content")
                        .WithMany("ContentClassificationValues")
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuContentModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuContentStatusModel", "ContentStatus")
                        .WithMany("Contents")
                        .HasForeignKey("ContentStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuContentTypeModel", "ContentType")
                        .WithMany("Contents")
                        .HasForeignKey("ContentTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuOrganizationModel", "Organizaton")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuProjectModel", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.HasOne("StudentUnion0105.Models.SuSecurityLevelModel", "SecurityLevelObject")
                        .WithMany("Contents")
                        .HasForeignKey("SecurityLevel")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuProcessTemplateStepFieldStatusModel")
                        .WithMany("SuProcessTemplateStepFieldModel")
                        .HasForeignKey("SuProcessTemplateStepFieldStatusModelId");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuContentTypeLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuContentTypeModel", "ContentType")
                        .WithMany("ContentTypeLanguages")
                        .HasForeignKey("ContentTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany("ContentTypeLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuOrganizationLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany("OrganizationLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuOrganizationModel", "Organization")
                        .WithMany("OrganizationLanguages")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuOrganizationModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuOrganizationStatusModel", "OrganizationStatus")
                        .WithMany("Organization")
                        .HasForeignKey("OrganizationStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuOrganizationTypeModel", "OrganizationType")
                        .WithMany("Organizations")
                        .HasForeignKey("OrganizationTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuOrganizationModel", "ParentOrganization")
                        .WithMany("ChildOrganizations")
                        .HasForeignKey("ParentOrganizationId");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuOrganizationTypeLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany("OrganizationTypeLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuOrganizationTypeModel", "OrganizationType")
                        .WithMany("OrganizationTypeLanguages")
                        .HasForeignKey("OrganizationTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuPageLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuPageModel", "Page")
                        .WithMany("PageLanguages")
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuPageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuPageStatusModel", "PageStatus")
                        .WithMany("Organization")
                        .HasForeignKey("PageStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuPageTypeModel", "PageType")
                        .WithMany("Pages")
                        .HasForeignKey("PageTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuPageSectionLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "PageLanguage")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuPageSectionModel", "PageSection")
                        .WithMany("PageSectionLanguages")
                        .HasForeignKey("PageSectionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuPageSectionModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuContentTypeModel", "ContentType")
                        .WithMany()
                        .HasForeignKey("ContentTypeId");

                    b.HasOne("StudentUnion0105.Models.SuPageModel", "Page")
                        .WithMany("PageSections")
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuPageSectionTypeModel", "PageSectionType")
                        .WithMany("PageSections")
                        .HasForeignKey("PageSectionTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuPageSectionTypeLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuPageSectionTypeModel", "PageType")
                        .WithMany("PageSectionTypeLanguages")
                        .HasForeignKey("PageTypeId");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuPageTypeLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuPageTypeModel", "PageType")
                        .WithMany("PageTypeLanguages")
                        .HasForeignKey("PageTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateFieldLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuProcessTemplateFieldModel", "ProcessTemplateField")
                        .WithMany("ProcessTemplateFieldLanguages")
                        .HasForeignKey("ProcessTemplateFieldId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateFieldModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuDataTypeModel", "DataType")
                        .WithMany()
                        .HasForeignKey("FieldDataTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuMasterListModel", "MasterList")
                        .WithMany()
                        .HasForeignKey("FieldMasterListId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuProcessTemplateModel", "ProcessTemplate")
                        .WithMany()
                        .HasForeignKey("ProcessTemplateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateFieldTypeLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuPageTypeModel", "PageType")
                        .WithMany()
                        .HasForeignKey("FieldTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateFlowConditionLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuProcessTemplateFlowConditionModel", "ProcessTemplateFlowCondition")
                        .WithMany("ProcessTemplateFlowConditionLanguages")
                        .HasForeignKey("FlowConditionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateFlowConditionModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuProcessTemplateFlowConditionTypeModel", "ProcessTemplateFlowConditionType")
                        .WithMany("ProcessTemplateFlowConditions")
                        .HasForeignKey("ProcessTemplateConditionTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuProcessTemplateFlowModel", "ProcessTemplateFlow")
                        .WithMany()
                        .HasForeignKey("ProcessTemplateFlowId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateFlowConditionTypeLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuProcessTemplateFlowConditionTypeModel", "FlowConditionType")
                        .WithMany("ProcessTemplateFlowConditionTypeLanguages")
                        .HasForeignKey("FlowConditionTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateFlowLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuProcessTemplateFlowModel", "ProcessTemplateFlow")
                        .WithMany()
                        .HasForeignKey("FlowId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateGroupLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuProcessTemplateGroupModel")
                        .WithMany("ProcessTemplateGroupLanguages")
                        .HasForeignKey("SuProcessTemplateGroupModelId");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuProcessTemplateGroupModel", "ProcessTemplateGroup")
                        .WithMany()
                        .HasForeignKey("ProcessTemplateGroupId");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuProcessTemplateGroupModel", "ProcessTemplateGroup")
                        .WithMany("ProcessTemplates")
                        .HasForeignKey("ProcessTemplateGroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateStepFieldModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuProcessTemplateFieldModel", "ProcessTemplateField")
                        .WithMany("ProcessTemplateFieldSteps")
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuProcessTemplateStepFieldStatusModel", "ProcessTemplateStepFieldStatus")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuProcessTemplateStepModel", "ProcessTemplateStep")
                        .WithMany("ProcessTemplateStepFields")
                        .HasForeignKey("StepId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateStepLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuProcessTemplateStepModel", "ProcessTemplateStep")
                        .WithMany("ProcessTemplateStepLanguages")
                        .HasForeignKey("StepId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateStepModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuProcessTemplateModel", "ProcessTemplate")
                        .WithMany()
                        .HasForeignKey("ProcessTemplateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProjectLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany("ProjectLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuProjectModel", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProjectModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuProjectStatusModel", "ProjectStatus")
                        .WithMany("Projects")
                        .HasForeignKey("ProjectStatusId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
