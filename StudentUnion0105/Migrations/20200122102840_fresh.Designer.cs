// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentUnion0105.Data;

namespace StudentUnion0105.Migrations
{
    [DbContext(typeof(SuDbContext))]
    [Migration("20200122102840_fresh")]
    partial class fresh
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "5c852bcf-6d0b-4340-ba33-6873f95a9c6c",
                            ConcurrencyStamp = "e1b73e2d-fb48-4d29-8b35-2410f1dfb1ff",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "cc6c9db3-bd34-4a99-ad94-a7085d082779",
                            ConcurrencyStamp = "a9a83345-ef25-416b-9eb9-042b81fb0487",
                            Name = "Super admin",
                            NormalizedName = "SUPER ADMIN"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("StudentUnion0105.Models.LeftMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddAction");

                    b.Property<string>("AddController");

                    b.Property<string>("AddName");

                    b.Property<bool>("AdvancedSearchShow");

                    b.Property<bool>("HasAdd");

                    b.Property<bool>("HasAdvancedSearch");

                    b.Property<bool>("HasMenu");

                    b.Property<bool>("HasSearch");

                    b.Property<string>("ImageName");

                    b.Property<string>("MainAction");

                    b.Property<string>("MainController");

                    b.Property<bool>("MenuAddShow");

                    b.Property<string>("MenuName");

                    b.Property<bool>("MenuShow");

                    b.Property<bool>("SearchShow");

                    b.HasKey("Id");

                    b.ToTable("ZdbLeftMenu");
                });

            modelBuilder.Entity("StudentUnion0105.Models.Menu1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DestinationURL");

                    b.Property<string>("MenuName");

                    b.HasKey("Id");

                    b.ToTable("ZdbMenu1");
                });

            modelBuilder.Entity("StudentUnion0105.Models.Menu2", b =>
                {
                    b.Property<int>("OId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DestinationURL");

                    b.Property<string>("MenuName");

                    b.Property<int>("PId");

                    b.HasKey("OId");

                    b.HasIndex("PId");

                    b.ToTable("ZdbMenu2");
                });

            modelBuilder.Entity("StudentUnion0105.Models.Menu3", b =>
                {
                    b.Property<int>("OId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DestinationURL");

                    b.Property<string>("MenuName");

                    b.Property<int>("PId");

                    b.Property<int>("PPId");

                    b.HasKey("OId");

                    b.HasIndex("PId");

                    b.ToTable("ZdbMenu3");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Claim");

                    b.Property<string>("ClaimGroup");

                    b.Property<string>("ClaimType");

                    b.HasKey("Id");

                    b.ToTable("DbClaim");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationDeleteGetModel", b =>
                {
                    b.Property<int>("OId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Creator");

                    b.Property<string>("Description");

                    b.Property<int>("DropDownSequence");

                    b.Property<bool>("HasDropDown");

                    b.Property<int>("LId");

                    b.Property<string>("MenuName");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Modifier");

                    b.Property<string>("MouseOver");

                    b.Property<string>("Name");

                    b.Property<string>("StatusName");

                    b.HasKey("OId");

                    b.ToTable("ZdbClassificationDeleteGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationEditGetModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassificationStatusId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Creator");

                    b.Property<int>("DefaultClassificationPageId");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("DropDownSequence");

                    b.Property<bool>("HasDropDown");

                    b.Property<int>("Lid");

                    b.Property<string>("MenuName")
                        .IsRequired();

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Modifier");

                    b.Property<string>("MouseOver")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("ZdbClassificationEditGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassificationId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<string>("Description");

                    b.Property<int>("LanguageId");

                    b.Property<string>("MenuName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<string>("MouseOver")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("ClassificationId");

                    b.HasIndex("LanguageId");

                    b.ToTable("DbClassificationLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationLevelDeleteGetModel", b =>
                {
                    b.Property<int>("OId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Alphabetically");

                    b.Property<bool>("CanLink");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Creator");

                    b.Property<int>("DateLevel");

                    b.Property<string>("Description");

                    b.Property<bool>("InDropDown");

                    b.Property<bool>("InMenu");

                    b.Property<int>("LId");

                    b.Property<string>("MenuName");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Modifier");

                    b.Property<string>("MouseOver");

                    b.Property<string>("Name");

                    b.Property<bool>("OnTheFly");

                    b.Property<int>("PId");

                    b.Property<int>("Sequence");

                    b.HasKey("OId");

                    b.ToTable("ZdbClassificationLevelDeleteGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationLevelEditGetModel", b =>
                {
                    b.Property<int>("OId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Alphabetically");

                    b.Property<bool>("CanLink");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Creator");

                    b.Property<int>("DateLevel");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<bool>("InDropDown");

                    b.Property<bool>("InMenu");

                    b.Property<int>("Lid");

                    b.Property<string>("MenuName")
                        .IsRequired();

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Modifier");

                    b.Property<string>("MouseOver")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<bool>("OnTheFly");

                    b.Property<int>("PId");

                    b.Property<int>("Sequence");

                    b.HasKey("OId");

                    b.ToTable("ZdbClassificationLevelEditGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationLevelIndexGetModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("MenuName");

                    b.Property<string>("MouseOver");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ZdbClassificationLevelIndexGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationLevelLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassificationLevelId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<string>("Description");

                    b.Property<int>("LanguageId");

                    b.Property<string>("MenuName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<string>("MouseOver")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("ClassificationLevelId");

                    b.HasIndex("LanguageId");

                    b.ToTable("DbClassificationLevelLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationLevelModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Alphabetically");

                    b.Property<bool>("CanLink");

                    b.Property<int>("ClassificationId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<int>("DateLevel");

                    b.Property<bool>("InDropDown");

                    b.Property<bool>("InMenu");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<bool>("OnTheFly");

                    b.Property<int>("Sequence");

                    b.HasKey("Id");

                    b.HasIndex("ClassificationId");

                    b.ToTable("DbClassificationLevel");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassificationStatusId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<int>("DefaultClassificationPageId");

                    b.Property<int>("DropDownSequence");

                    b.Property<bool>("HasDropDown");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.HasKey("Id");

                    b.HasIndex("ClassificationStatusId");

                    b.ToTable("DbClassification");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationPageDeleteGetModel", b =>
                {
                    b.Property<int>("OId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Creator");

                    b.Property<string>("Description");

                    b.Property<int>("LId");

                    b.Property<string>("MenuName");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Modifier");

                    b.Property<string>("MouseOver");

                    b.Property<string>("Name");

                    b.Property<int>("PId");

                    b.Property<bool>("ShowTitleDescription");

                    b.Property<bool>("ShowTitleName");

                    b.Property<int>("Status");

                    b.Property<string>("TitleDescription");

                    b.Property<string>("TitleName");

                    b.HasKey("OId");

                    b.ToTable("ZdbClassificationPageDeleteGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationPageEditGetModel", b =>
                {
                    b.Property<int>("OId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Creator");

                    b.Property<string>("Description");

                    b.Property<int>("LId");

                    b.Property<string>("MenuName");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Modifier");

                    b.Property<string>("MouseOver");

                    b.Property<string>("Name");

                    b.Property<int>("PId");

                    b.Property<bool>("ShowTitleDescription");

                    b.Property<bool>("ShowTitleName");

                    b.Property<int>("StatusId");

                    b.Property<string>("TitleDescription");

                    b.Property<string>("TitleName");

                    b.HasKey("OId");

                    b.ToTable("ZdbClassificationPageEditGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationPageLanguageEditGetModel", b =>
                {
                    b.Property<int>("LId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Creator");

                    b.Property<string>("Description");

                    b.Property<string>("Language");

                    b.Property<string>("MenuName");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Modifier");

                    b.Property<string>("MouseOver");

                    b.Property<string>("Name");

                    b.Property<int>("OId");

                    b.Property<string>("TitleDescription");

                    b.Property<string>("TitleName");

                    b.HasKey("LId");

                    b.ToTable("ZdbClassificationPageLanguageEditGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationPageLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassificationPageId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<string>("Description");

                    b.Property<int>("LanguageId");

                    b.Property<string>("MenuName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<string>("MouseOver")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<string>("TitleDescription");

                    b.Property<string>("TitleName")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("ClassificationPageId");

                    b.HasIndex("LanguageId");

                    b.ToTable("DbClassificationPageLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationPageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassificationId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<bool>("ShowTitleDescription");

                    b.Property<bool>("ShowTitleName");

                    b.Property<int>("StatusId");

                    b.HasKey("Id");

                    b.HasIndex("ClassificationId");

                    b.ToTable("DbClassificationPage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationPageSectionDeleteGetModel", b =>
                {
                    b.Property<int>("OId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContentTypeName");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Creator");

                    b.Property<string>("Description");

                    b.Property<bool>("HasPaging");

                    b.Property<int>("LId");

                    b.Property<int>("MaxContent");

                    b.Property<string>("MenuName");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Modifier");

                    b.Property<string>("MouseOver");

                    b.Property<string>("Name");

                    b.Property<int>("OneTwoColumns");

                    b.Property<int>("PId");

                    b.Property<string>("SectionTypeName");

                    b.Property<int>("Sequence");

                    b.Property<bool>("ShowContentTypeTitleDescription");

                    b.Property<bool>("ShowContentTypeTitleName");

                    b.Property<bool>("ShowSectionTitleDescription");

                    b.Property<bool>("ShowSectionTitleName");

                    b.Property<int>("SortById");

                    b.Property<string>("TitleDescription");

                    b.Property<string>("TitleName");

                    b.HasKey("OId");

                    b.ToTable("ZdbClassificationPageSectionDeleteGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationPageSectionEditGetModel", b =>
                {
                    b.Property<int>("OId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContentTypeId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Creator");

                    b.Property<string>("Description");

                    b.Property<bool>("HasPaging");

                    b.Property<int>("LId");

                    b.Property<int>("MaxContent");

                    b.Property<string>("MenuName");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Modifier");

                    b.Property<string>("MouseOver");

                    b.Property<string>("Name");

                    b.Property<int>("OneTwoColumns");

                    b.Property<int>("PId");

                    b.Property<int>("SectionTypeId");

                    b.Property<int>("Sequence");

                    b.Property<bool>("ShowContentTypeTitleDescription");

                    b.Property<bool>("ShowContentTypeTitleName");

                    b.Property<bool>("ShowSectionTitleDescription");

                    b.Property<bool>("ShowSectionTitleName");

                    b.Property<int>("SortById");

                    b.Property<string>("TitleDescription");

                    b.Property<string>("TitleName");

                    b.HasKey("OId");

                    b.ToTable("ZdbClassificationPageSectionEditGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationPageSectionLanguageEditGetModel", b =>
                {
                    b.Property<int>("LId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Creator");

                    b.Property<string>("Description");

                    b.Property<string>("Language");

                    b.Property<string>("MenuName");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Modifier");

                    b.Property<string>("MouseOver");

                    b.Property<string>("Name");

                    b.Property<int>("OId");

                    b.Property<string>("TitleDescription");

                    b.Property<string>("TitleName");

                    b.HasKey("LId");

                    b.ToTable("ZdbClassificationPageSectionLanguageEditGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationPageSectionLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId")
                        .HasMaxLength(50);

                    b.Property<string>("Description");

                    b.Property<int>("LanguageId");

                    b.Property<string>("MenuName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<string>("MouseOver")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<int>("PageSectionId");

                    b.Property<string>("TitleDescription");

                    b.Property<string>("TitleName")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("PageSectionId");

                    b.ToTable("DbClassificationPageSectionLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationPageSectionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassificationPageId");

                    b.Property<int?>("ContentTypeId");

                    b.Property<bool>("HasPaging");

                    b.Property<int>("MaxContent");

                    b.Property<int>("OneTwoColumns");

                    b.Property<int>("SectionTypeId");

                    b.Property<int>("Sequence");

                    b.Property<bool>("ShowContentTypeTitleDescription");

                    b.Property<bool>("ShowContentTypeTitleName");

                    b.Property<bool>("ShowSectionTitleDescription");

                    b.Property<bool>("ShowSectionTitleName");

                    b.Property<int>("SortById");

                    b.HasKey("Id");

                    b.HasIndex("ClassificationPageId");

                    b.HasIndex("ContentTypeId");

                    b.HasIndex("SectionTypeId");

                    b.ToTable("DbClassificationPageSection");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationStatusModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("DbClassificationStatus");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationValueEditGetLevelModel", b =>
                {
                    b.Property<int>("DateLevel")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("InDropDown");

                    b.HasKey("DateLevel");

                    b.ToTable("ZdbClassificationValueEditGetLevel");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationValueEditGetModel", b =>
                {
                    b.Property<int>("OId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Creator");

                    b.Property<int>("DateLevel");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<string>("DropDownName");

                    b.Property<DateTimeOffset>("FromDate");

                    b.Property<string>("HeaderDescription");

                    b.Property<string>("HeaderName");

                    b.Property<bool>("InDropDown");

                    b.Property<int>("LId");

                    b.Property<string>("MenuName")
                        .IsRequired();

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Modifier");

                    b.Property<string>("MouseOver")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("PId");

                    b.Property<string>("PageDescription");

                    b.Property<string>("PageName");

                    b.Property<int>("ParentId");

                    b.Property<DateTimeOffset>("ToDate");

                    b.Property<string>("TopicName");

                    b.HasKey("OId");

                    b.ToTable("ZdbClassificationValueEditGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationValueLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassificationValueId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<string>("Description");

                    b.Property<string>("DropDownName");

                    b.Property<string>("HeaderDescription");

                    b.Property<string>("HeaderName");

                    b.Property<int>("LanguageId");

                    b.Property<string>("MenuName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<string>("MouseOver")
                        .HasMaxLength(50);

                    b.Property<string>("Name");

                    b.Property<string>("PageDescription");

                    b.Property<string>("PageName");

                    b.Property<string>("TopicName");

                    b.HasKey("Id");

                    b.HasIndex("ClassificationValueId");

                    b.HasIndex("LanguageId");

                    b.ToTable("DbClassificationValueLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationValueModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassificationId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<DateTimeOffset?>("DateFrom");

                    b.Property<DateTimeOffset?>("DateTo");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<int?>("ParentValueId");

                    b.HasKey("Id");

                    b.HasIndex("ClassificationId");

                    b.ToTable("DbClassificationValue");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuComparisonModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("Symbol");

                    b.HasKey("Id");

                    b.ToTable("DbComparison");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuContentClassificationValueModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassificationValueId");

                    b.Property<int>("ContentId");

                    b.HasKey("Id");

                    b.HasIndex("ClassificationValueId");

                    b.HasIndex("ContentId");

                    b.ToTable("DbContentClassificationValue");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuContentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContentStatusId");

                    b.Property<int>("ContentTypeId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<string>("Description");

                    b.Property<int>("LanguageId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<int>("OrganizationId");

                    b.Property<int?>("ProjectId");

                    b.Property<int>("SecurityLevel");

                    b.Property<int?>("SuProcessTemplateStepFieldStatusModelId");

                    b.Property<string>("Title")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("ContentStatusId");

                    b.HasIndex("ContentTypeId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("SecurityLevel");

                    b.HasIndex("SuProcessTemplateStepFieldStatusModelId");

                    b.ToTable("DbContent");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuContentStatusModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("DbContentStatus");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuContentTypeDeleteGetModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Creator");

                    b.Property<string>("Description");

                    b.Property<int>("LId");

                    b.Property<string>("MenuName");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Modifier");

                    b.Property<string>("MouseOver");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("DbContentTypeDeleteGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuContentTypeEditGetModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Creator");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("Lid");

                    b.Property<string>("MenuName")
                        .IsRequired();

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Modifier");

                    b.Property<string>("MouseOver")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("TitleDescription");

                    b.Property<string>("TitleName");

                    b.HasKey("Id");

                    b.ToTable("ZdbContentTypeEditGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuContentTypeLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContentTypeId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<string>("Description");

                    b.Property<int>("LanguageId");

                    b.Property<string>("MenuName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<string>("MouseOver")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<string>("TitleDescription");

                    b.Property<string>("TitleName");

                    b.HasKey("Id");

                    b.HasIndex("ContentTypeId");

                    b.HasIndex("LanguageId");

                    b.ToTable("DbContentTypeLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuContentTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.HasKey("Id");

                    b.ToTable("DbContentType");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuCountryList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("DbCountryList");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuCountryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ForeignName");

                    b.Property<string>("ISO31662");

                    b.Property<string>("ISO31663");

                    b.Property<int>("ISO3166Num");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Region");

                    b.HasKey("Id");

                    b.ToTable("DbCountry");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuDataTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("DbDataType");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuFrontCalendarEventCalendarModel", b =>
                {
                    b.Property<int>("ProcessFieldId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTimeValue");

                    b.Property<int>("IntValue");

                    b.Property<DateTime>("MainDate");

                    b.Property<int>("ProcessId");

                    b.Property<int>("ProcessTemplateFieldId");

                    b.Property<int>("ProcessTemplateFieldTypeId");

                    b.Property<int>("ProcessTemplateStepTypeId");

                    b.Property<int>("StepId");

                    b.Property<string>("StringValue");

                    b.HasKey("ProcessFieldId");

                    b.ToTable("ZdbFrontCalendarEventCalendar");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuFrontContentModel", b =>
                {
                    b.Property<int>("OId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<int>("PId");

                    b.Property<string>("Title");

                    b.HasKey("OId");

                    b.HasIndex("PId");

                    b.ToTable("ZdbFrontContent");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuFrontOrganizationDashboardGetContentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContentStatusName");

                    b.Property<string>("ContentTypeName");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Creator");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Modifier");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("ZdbFrontOrganizationDashboardGetContent");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuFrontOrganizationDashboardGetOrganizationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Creator");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Modifier");

                    b.Property<string>("OrganizationName");

                    b.Property<string>("ParentName");

                    b.Property<string>("StatusName");

                    b.Property<string>("TypeName");

                    b.HasKey("Id");

                    b.ToTable("ZdbFrontOrganizationDashboardGetOrganization");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuFrontOrganizationDashboardGetUsersModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TypeName");

                    b.Property<string>("UserId");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("ZdbFrontOrganizationDashboardGetUsers");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuFrontOrganizationMyOrganizationGetModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("OrganizationName");

                    b.Property<string>("UserOrganizationTypeName");

                    b.HasKey("Id");

                    b.ToTable("ZdbFrontOrganizationMyOrganizationGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuFrontPageModel", b =>
                {
                    b.Property<int>("OId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<int>("LId");

                    b.Property<string>("MenuName");

                    b.Property<string>("MouseOver");

                    b.Property<string>("Name");

                    b.Property<bool>("ShowTitleDescription");

                    b.Property<bool>("ShowTitleName");

                    b.Property<string>("TitleDescription");

                    b.Property<string>("TitleName");

                    b.HasKey("OId");

                    b.ToTable("ZdbFrontPage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuFrontPageMyContentGetModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("OrganizationName");

                    b.Property<string>("ProjectName");

                    b.Property<string>("StatusName");

                    b.Property<string>("Title");

                    b.Property<string>("TypeName");

                    b.HasKey("Id");

                    b.ToTable("ZdbFrontPageMyContentGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuFrontPageSectionModel", b =>
                {
                    b.Property<int>("OId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContentTitleDescription");

                    b.Property<string>("ContentTitleName");

                    b.Property<string>("Description");

                    b.Property<bool>("HasPaging");

                    b.Property<int>("LId");

                    b.Property<int>("MaxContent");

                    b.Property<string>("MenuName");

                    b.Property<string>("MouseOver");

                    b.Property<string>("Name");

                    b.Property<int>("OneTwoColumns");

                    b.Property<int>("PId");

                    b.Property<int>("Sequence");

                    b.Property<bool>("ShowContentTypeDescription");

                    b.Property<bool>("ShowContentTypeTitle");

                    b.Property<bool>("ShowSectionTitleDescription");

                    b.Property<bool>("ShowSectionTitleName");

                    b.Property<string>("TitleDescription");

                    b.Property<string>("TitleName");

                    b.HasKey("OId");

                    b.HasIndex("PId");

                    b.ToTable("ZdbFrontPageSection");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuFrontPageViewGetModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Creator");

                    b.Property<string>("Description");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Modifier");

                    b.Property<string>("OrganizationName");

                    b.Property<int>("SecurityLevel");

                    b.Property<string>("StatusName");

                    b.Property<string>("Title");

                    b.Property<string>("TypeName");

                    b.HasKey("Id");

                    b.ToTable("ZdbFrontPageViewGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuFrontProcessCreateGetFieldModel", b =>
                {
                    b.Property<int>("FieldId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTimeValue");

                    b.Property<string>("Description");

                    b.Property<int>("IntValue");

                    b.Property<string>("Name");

                    b.Property<int>("OId");

                    b.Property<int>("PId");

                    b.Property<int>("ProcessTemplateFieldTypeId");

                    b.Property<int>("StatusId");

                    b.Property<string>("StringValue");

                    b.HasKey("FieldId");

                    b.HasIndex("PId");

                    b.ToTable("ZdbFrontProcessCreateGetField");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuFrontProcessCreateGetModel", b =>
                {
                    b.Property<int>("OId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int>("PId");

                    b.Property<int>("StepId");

                    b.HasKey("OId");

                    b.ToTable("ZdbFrontProcessCreateGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuFrontProcessIndexGetTemplateFlowConditionModel", b =>
                {
                    b.Property<int>("OId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComparisonOperatorId");

                    b.Property<int>("ConditionInt");

                    b.Property<string>("ConditionString");

                    b.Property<int>("ConditionTypeId");

                    b.HasKey("OId");

                    b.ToTable("ZdbFrontProcessIndexGetTemplateFlowCondition");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuFrontProcessIndexGetTemplateGroupModel", b =>
                {
                    b.Property<int>("OId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("OId");

                    b.ToTable("ZdbFrontProcessIndexGetTemplateGroup");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuFrontProcessIndexGetTemplateModel", b =>
                {
                    b.Property<int>("OId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int>("PId");

                    b.HasKey("OId");

                    b.HasIndex("PId");

                    b.ToTable("ZdbFrontProcessIndexGetTemplate");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuFrontProcessToDoIndex2GetForAndOrModel", b =>
                {
                    b.Property<int>("ConditionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComparisonOperatorId");

                    b.Property<DateTime>("ConditionDate");

                    b.Property<int>("ConditionFieldId");

                    b.Property<int>("ConditionInt");

                    b.Property<string>("ConditionString");

                    b.Property<int>("ConditionTypeId");

                    b.Property<int>("FlowId");

                    b.HasKey("ConditionId");

                    b.ToTable("ZdbFrontProcessToDoIndex2GetForAndOr");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuFrontProcessToDoIndex2GetModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ZdbFrontProcessToDoIndex2Get");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuFrontProcessTodoEditGetModel", b =>
                {
                    b.Property<int>("PTFId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTimeValue");

                    b.Property<int>("FId");

                    b.Property<int>("FieldDataTypeId");

                    b.Property<int>("FieldMasterListId");

                    b.Property<int>("IntValue");

                    b.Property<string>("MouseOver");

                    b.Property<string>("Name");

                    b.Property<int>("PId");

                    b.Property<int>("Sequence");

                    b.Property<int>("StatusId");

                    b.Property<string>("StringValue");

                    b.HasKey("PTFId");

                    b.ToTable("ZdbSuFrontProcessTodoEditGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuFrontProcessTodoIndexGetModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ZdbSuFrontProcessTodoIndexGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuFrontProjectMyFrontProjectGetModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("ProjectName");

                    b.Property<string>("RelationName");

                    b.HasKey("Id");

                    b.ToTable("ZdbFrontProjectMyProjectGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuFrontRelationMyFrontRelationGetModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RelationName");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("ZdbFrontRelationMyRelationGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuInt", b =>
                {
                    b.Property<int>("intValue")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("intValue");

                    b.ToTable("ZdbInt");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuLanguageList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ZDbLanguageList");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("ForeignName");

                    b.Property<string>("ISO6391");

                    b.Property<string>("ISO6392");

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("DbLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuLayoutTermList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ZdbLayoutTermList");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuLeftMenuLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddMouseOver")
                        .HasMaxLength(50);

                    b.Property<string>("AddName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<string>("Description");

                    b.Property<int>("LanguageId");

                    b.Property<int>("LeftMenuId");

                    b.Property<string>("MainMouseOver")
                        .HasMaxLength(50);

                    b.Property<string>("MainName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("LeftMenuId");

                    b.ToTable("dbLeftMenuLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuLeftMenuModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddAction");

                    b.Property<string>("AddController");

                    b.Property<bool>("HasAdd");

                    b.Property<bool>("HasAdvancedSearch");

                    b.Property<bool>("HasMenu");

                    b.Property<bool>("HasSearch");

                    b.Property<string>("ImageName");

                    b.Property<string>("MainAction");

                    b.Property<string>("MainController");

                    b.Property<string>("MenuName");

                    b.HasKey("Id");

                    b.ToTable("dbLeftMenu");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuLeftMenuUserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AdvancedSearchShow");

                    b.Property<int>("LeftMenuId");

                    b.Property<bool>("MenuAddShow");

                    b.Property<string>("MenuName");

                    b.Property<bool>("MenuShow");

                    b.Property<string>("MenuURL");

                    b.Property<bool>("SearchShow");

                    b.Property<int>("Sequence");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("LeftMenuId");

                    b.ToTable("dbLeftMenuUser");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuMasterListModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int>("Sequence");

                    b.HasKey("Id");

                    b.ToTable("DbMasterList");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuMenu1DeleteGetModel", b =>
                {
                    b.Property<int>("OId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action");

                    b.Property<string>("ClassificationName");

                    b.Property<string>("Controller");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Creator");

                    b.Property<int>("DestinationId");

                    b.Property<int>("FeatureId");

                    b.Property<int>("LId");

                    b.Property<string>("LanguageName");

                    b.Property<string>("MenuName");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Modifier");

                    b.Property<string>("MouseOver");

                    b.Property<string>("TypeName");

                    b.HasKey("OId");

                    b.ToTable("ZdbMenu1DeleteGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuMenu1EditGetModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action");

                    b.Property<int>("ClassificationId");

                    b.Property<string>("Controller");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Creator");

                    b.Property<int>("DestinationId");

                    b.Property<int>("FeatureId");

                    b.Property<int>("LId");

                    b.Property<int>("LanguageId");

                    b.Property<string>("MenuName");

                    b.Property<int>("MenuTypeId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Modifier");

                    b.Property<string>("MouseOver");

                    b.Property<int>("Sequence");

                    b.HasKey("Id");

                    b.ToTable("ZdbMenu1EditGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuMenu1IndexGetModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MenuName");

                    b.Property<string>("MouseOver");

                    b.HasKey("Id");

                    b.ToTable("ZdbMenu1IndexGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuMenu1LanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<int>("LanguageId");

                    b.Property<int>("Menu1Id");

                    b.Property<string>("MenuName")
                        .HasMaxLength(20);

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<string>("MouseOver")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("Menu1Id");

                    b.ToTable("dbMenu1Language");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuMenu1Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasMaxLength(20);

                    b.Property<int>("ClassificationId");

                    b.Property<string>("Controller")
                        .HasMaxLength(20);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<int>("DestinationId");

                    b.Property<int>("FeatureId");

                    b.Property<int>("MenuTypeId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<int>("Sequence");

                    b.HasKey("Id");

                    b.HasIndex("MenuTypeId");

                    b.ToTable("dbMenu1");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuMenu2DeleteGetModel", b =>
                {
                    b.Property<int>("OId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action");

                    b.Property<string>("ClassificationName");

                    b.Property<string>("Controller");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Creator");

                    b.Property<int>("DestinationId");

                    b.Property<int>("FeatureId");

                    b.Property<int>("LId");

                    b.Property<string>("LanguageName");

                    b.Property<string>("MenuName");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Modifier");

                    b.Property<string>("MouseOver");

                    b.Property<string>("TypeName");

                    b.HasKey("OId");

                    b.ToTable("ZdbMenu2DeleteGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuMenu2EditGetModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action");

                    b.Property<int>("ClassificationId");

                    b.Property<string>("Controller");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Creator");

                    b.Property<int>("DestinationId");

                    b.Property<int>("FeatureId");

                    b.Property<int>("LId");

                    b.Property<int>("LanguageId");

                    b.Property<int>("Menu1Id");

                    b.Property<string>("MenuName");

                    b.Property<int>("MenuTypeId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Modifier");

                    b.Property<string>("MouseOver");

                    b.Property<int>("Sequence");

                    b.HasKey("Id");

                    b.ToTable("ZdbMenu2EditGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuMenu2IndexGetModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MenuName");

                    b.Property<string>("MouseOver");

                    b.HasKey("Id");

                    b.ToTable("ZdbMenu2IndexGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuMenu2LanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<int>("LanguageId");

                    b.Property<int?>("Menu1Id");

                    b.Property<int>("Menu2Id");

                    b.Property<string>("MenuName")
                        .HasMaxLength(20);

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<string>("MouseOver")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("Menu1Id");

                    b.ToTable("dbMenu2Language");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuMenu2Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasMaxLength(20);

                    b.Property<int>("ClassificationId");

                    b.Property<string>("Controller")
                        .HasMaxLength(20);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<int>("DestinationId");

                    b.Property<int>("FeatureId");

                    b.Property<int>("Menu1Id");

                    b.Property<int>("MenuTypeId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<int>("Sequence");

                    b.HasKey("Id");

                    b.HasIndex("Menu1Id");

                    b.HasIndex("MenuTypeId");

                    b.ToTable("dbMenu2");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuMenu3DeleteGetModel", b =>
                {
                    b.Property<int>("OId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action");

                    b.Property<string>("ClassificationName");

                    b.Property<string>("Controller");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Creator");

                    b.Property<int>("DestinationId");

                    b.Property<int>("FeatureId");

                    b.Property<int>("LId");

                    b.Property<string>("LanguageName");

                    b.Property<string>("MenuName");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Modifier");

                    b.Property<string>("MouseOver");

                    b.Property<string>("TypeName");

                    b.HasKey("OId");

                    b.ToTable("ZdbMenu3DeleteGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuMenu3EditGetModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action");

                    b.Property<int>("ClassificationId");

                    b.Property<string>("Controller");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Creator");

                    b.Property<int>("DestinationId");

                    b.Property<int>("FeatureId");

                    b.Property<int>("LId");

                    b.Property<string>("MenuName");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Modifier");

                    b.Property<string>("MouseOver");

                    b.Property<int>("Sequence");

                    b.HasKey("Id");

                    b.ToTable("ZdbMenu3EditGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuMenu3IndexGetModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MenuName");

                    b.Property<string>("MouseOver");

                    b.HasKey("Id");

                    b.ToTable("ZdbMenu3IndexGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuMenu3LanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<int>("LanguageId");

                    b.Property<int?>("Menu1Id");

                    b.Property<int>("Menu3Id");

                    b.Property<string>("MenuName")
                        .HasMaxLength(20);

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<string>("MouseOver")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("Menu1Id");

                    b.ToTable("dbMenu3Language");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuMenu3Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasMaxLength(20);

                    b.Property<int>("ClassificationId");

                    b.Property<string>("Controller")
                        .HasMaxLength(20);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<int>("DestinationId");

                    b.Property<int>("FeatureId");

                    b.Property<int>("Menu2Id");

                    b.Property<int>("MenuTypeId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<int>("Sequence");

                    b.HasKey("Id");

                    b.HasIndex("Menu2Id");

                    b.HasIndex("MenuTypeId");

                    b.ToTable("dbMenu3");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuMenuTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("dbMenuType");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Bool1");

                    b.Property<bool>("Bool2");

                    b.Property<string>("Creator");

                    b.Property<string>("Description");

                    b.Property<int>("Int1");

                    b.Property<int>("Int2");

                    b.Property<int?>("IntNull1");

                    b.Property<int?>("IntNull2");

                    b.Property<int>("LanguageId");

                    b.Property<string>("MenuName");

                    b.Property<string>("Modifier");

                    b.Property<string>("MouseOver");

                    b.Property<string>("Name");

                    b.Property<int>("ParentId");

                    b.Property<string>("Status");

                    b.HasKey("Id");

                    b.ToTable("DbObject");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuObjectIndexGetModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<string>("MenuName")
                        .IsRequired();

                    b.Property<string>("MouseOver")
                        .IsRequired();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ZdbObjectIndexGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuObjectLanguageCreateGetModel", b =>
                {
                    b.Property<int>("LId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("LanguageId");

                    b.Property<string>("MenuName")
                        .IsRequired();

                    b.Property<string>("MouseOver")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("OId");

                    b.HasKey("LId");

                    b.ToTable("ZdbObjectLanguageCreateGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuObjectLanguageEditGetModel", b =>
                {
                    b.Property<int>("LId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Creator");

                    b.Property<string>("Description");

                    b.Property<string>("Language");

                    b.Property<string>("MenuName");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Modifier");

                    b.Property<string>("MouseOver");

                    b.Property<string>("Name");

                    b.Property<int>("OId");

                    b.HasKey("LId");

                    b.ToTable("ZdbObjectLanguageEditGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuObjectLanguageIndexGetModel", b =>
                {
                    b.Property<int>("LId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<int>("LanguageId");

                    b.Property<string>("LanguageName");

                    b.Property<string>("MenuName");

                    b.Property<string>("MouseOver");

                    b.Property<string>("Name");

                    b.Property<int>("OId");

                    b.Property<int>("PId");

                    b.HasKey("LId");

                    b.ToTable("ZdbObjectLanguageIndexGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuOrganizationDeleteGetModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Creator");

                    b.Property<string>("Description");

                    b.Property<int>("LId");

                    b.Property<string>("MenuName");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Modifier");

                    b.Property<string>("MouseOver");

                    b.Property<string>("Name");

                    b.Property<string>("Status");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.ToTable("DbOrganizationDeleteGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuOrganizationEditGetModel", b =>
                {
                    b.Property<int>("OId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Creator");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("LId");

                    b.Property<int>("LanguageId");

                    b.Property<string>("MenuName")
                        .IsRequired();

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Modifier");

                    b.Property<string>("MouseOver")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("OrganizationStatusId");

                    b.Property<int>("OrganizationTypeId");

                    b.Property<string>("ParentOrganization");

                    b.HasKey("OId");

                    b.ToTable("ZdbOrganizationEditGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuOrganizationLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<string>("Description");

                    b.Property<int>("LanguageId");

                    b.Property<string>("MenuName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<string>("MouseOver")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<int>("OrganizationId");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("DbOrganizationLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuOrganizationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<int>("OrganizationStatusId");

                    b.Property<int>("OrganizationTypeId");

                    b.Property<int?>("ParentOrganizationId");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationStatusId");

                    b.HasIndex("OrganizationTypeId");

                    b.HasIndex("ParentOrganizationId");

                    b.ToTable("DbOrganization");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuOrganizationStatusModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("DbOrganizationStatus");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuOrganizationTypeDeleteGetModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Creator");

                    b.Property<string>("Description");

                    b.Property<int>("LId");

                    b.Property<string>("MenuName");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Modifier");

                    b.Property<string>("MouseOver");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("DbOrganizationTypeDeleteGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuOrganizationTypeEditGetModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Creator");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("Lid");

                    b.Property<string>("MenuName")
                        .IsRequired();

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Modifier");

                    b.Property<string>("MouseOver")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("ZdbOrganizationTypeEditGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuOrganizationTypeLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<string>("Description");

                    b.Property<int>("LanguageId");

                    b.Property<string>("MenuName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<string>("MouseOver")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<int>("OrganizationTypeId");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("OrganizationTypeId");

                    b.ToTable("DbOrganizationTypeLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuOrganizationTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.HasKey("Id");

                    b.ToTable("DbOrganizationType");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuPageDeleteGetModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Creator");

                    b.Property<string>("Description");

                    b.Property<int>("LId");

                    b.Property<string>("MenuName");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Modifier");

                    b.Property<string>("MouseOver");

                    b.Property<string>("Name");

                    b.Property<bool>("ShowTitleDescription");

                    b.Property<bool>("ShowTitleName");

                    b.Property<string>("Status");

                    b.Property<string>("TitleDescription");

                    b.Property<string>("TitleName");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.ToTable("DbPageDeleteGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuPageLanguageEditGetModel", b =>
                {
                    b.Property<int>("LId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Creator");

                    b.Property<string>("Description");

                    b.Property<string>("Language");

                    b.Property<string>("MenuName");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Modifier");

                    b.Property<string>("MouseOver");

                    b.Property<string>("Name");

                    b.Property<int>("OId");

                    b.Property<string>("TitleDescription");

                    b.Property<string>("TitleName");

                    b.HasKey("LId");

                    b.ToTable("ZdbPageLanguageEditGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuPageLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<string>("Description");

                    b.Property<int>("LanguageId");

                    b.Property<string>("MenuName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<string>("MouseOver")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<int>("PageId");

                    b.Property<string>("TitleDescription");

                    b.Property<string>("TitleName")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("PageId");

                    b.ToTable("DbPageLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuPageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<int>("PageStatusId");

                    b.Property<int>("PageTypeId");

                    b.Property<bool>("ShowTitleDescription");

                    b.Property<bool>("ShowTitleName");

                    b.HasKey("Id");

                    b.HasIndex("PageStatusId");

                    b.HasIndex("PageTypeId");

                    b.ToTable("DbPage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuPageSectionDeleteGetModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Creator");

                    b.Property<string>("Description");

                    b.Property<bool>("HasPaging");

                    b.Property<int>("LId");

                    b.Property<int>("MaxContent");

                    b.Property<string>("MenuName");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Modifier");

                    b.Property<string>("MouseOver");

                    b.Property<string>("Name");

                    b.Property<int>("OneTwoColumns");

                    b.Property<int>("Sequence");

                    b.Property<bool>("ShowContentTypeDescription");

                    b.Property<bool>("ShowContentTypeTitle");

                    b.Property<bool>("ShowSectionTitleDescription");

                    b.Property<bool>("ShowSectionTitleName");

                    b.Property<string>("Status");

                    b.Property<string>("TitleDescription");

                    b.Property<string>("TitleName");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.ToTable("DbPageSectionDeleteGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuPageSectionEditGetModel", b =>
                {
                    b.Property<int>("OId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContentTypeId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Creator");

                    b.Property<string>("Description");

                    b.Property<bool>("HasPaging");

                    b.Property<int>("LId");

                    b.Property<int>("MaxContent");

                    b.Property<string>("MenuName");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Modifier");

                    b.Property<string>("MouseOver");

                    b.Property<string>("Name");

                    b.Property<int>("OneTwoColumns");

                    b.Property<int>("PageSectionTypeId");

                    b.Property<int>("Sequence");

                    b.Property<bool>("ShowContentTypeDescription");

                    b.Property<bool>("ShowContentTypeTitle");

                    b.Property<bool>("ShowSectionTitleDescription");

                    b.Property<bool>("ShowSectionTitleName");

                    b.Property<int>("SortById");

                    b.Property<string>("TitleDescription");

                    b.Property<string>("titleName");

                    b.HasKey("OId");

                    b.ToTable("ZdbPageSectionEditGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuPageSectionLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<string>("Description");

                    b.Property<int>("LanguageId");

                    b.Property<string>("MenuName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<string>("MouseOver")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<int>("PageSectionId");

                    b.Property<string>("TitleDescription");

                    b.Property<string>("TitleName")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("PageSectionId");

                    b.ToTable("DbPageSectionLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuPageSectionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ContentTypeId");

                    b.Property<bool>("HasPaging");

                    b.Property<int>("MaxContent");

                    b.Property<int>("OneTwoColumns");

                    b.Property<int>("PageId");

                    b.Property<int>("PageSectionTypeId");

                    b.Property<int>("Sequence");

                    b.Property<bool>("ShowContentTypeDescription");

                    b.Property<bool>("ShowContentTypeTitle")
                        .HasMaxLength(50);

                    b.Property<bool>("ShowSectionTitleDescription");

                    b.Property<bool>("ShowSectionTitleName")
                        .HasMaxLength(50);

                    b.Property<int>("SortById");

                    b.HasKey("Id");

                    b.HasIndex("ContentTypeId");

                    b.HasIndex("PageId");

                    b.HasIndex("PageSectionTypeId");

                    b.ToTable("DbPageSection");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuPageSectionTypeEditGetModel", b =>
                {
                    b.Property<int>("OId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Creator");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<bool>("IndexSection");

                    b.Property<int>("LId");

                    b.Property<string>("MenuName")
                        .IsRequired();

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Modifier");

                    b.Property<string>("MouseOver")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("OId");

                    b.ToTable("ZdbPageSectionTypeEditGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuPageSectionTypeLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<string>("Description");

                    b.Property<int>("LanguageId");

                    b.Property<string>("MenuName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<string>("MouseOver")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<int>("PageSectionTypeId");

                    b.Property<int?>("PageTypeId");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("PageTypeId");

                    b.ToTable("DbPageSectionTypeLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuPageSectionTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<bool>("IndexSection");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.HasKey("Id");

                    b.ToTable("DbPageSectionType");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuPageSectionsViewModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ContentTypeId");

                    b.Property<string>("Description");

                    b.Property<bool>("HasPaging");

                    b.Property<bool>("IndexSection");

                    b.Property<int>("MaxContent");

                    b.Property<int>("OneTwoColumns");

                    b.Property<int>("PageId");

                    b.Property<bool>("ShowContentTypeDescription");

                    b.Property<bool>("ShowContentTypeTitle");

                    b.Property<bool>("ShowSectionTitleDescription");

                    b.Property<bool>("ShowSectionTitleName");

                    b.Property<int>("SortById");

                    b.Property<string>("TitleName")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("DbPageSectionsViewModel");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuPageStatusModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("DbPageStatus");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuPageTypeEditGetModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Creator");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("Lid");

                    b.Property<string>("MenuName")
                        .IsRequired();

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Modifier");

                    b.Property<string>("MouseOver")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("ZdbPageTypeEditGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuPageTypeLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<string>("Description");

                    b.Property<int>("LanguageId");

                    b.Property<string>("MenuName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<string>("MouseOver")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<int>("PageTypeId");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("PageTypeId");

                    b.ToTable("DbPageTypeLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuPageTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.HasKey("Id");

                    b.ToTable("DbPageType");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuPreferenceIndexGetModel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CountryId");

                    b.Property<int>("DefaultLanguageId");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("Id");

                    b.ToTable("ZdbPreferenceIndexGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuPreferenceLeftMenuEditGetModel", b =>
                {
                    b.Property<int>("UserMenuId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddAction");

                    b.Property<string>("AddController");

                    b.Property<string>("AddMouseOver");

                    b.Property<string>("AddName");

                    b.Property<bool>("AdvancedSearchShow");

                    b.Property<string>("Description");

                    b.Property<bool>("HasAdd");

                    b.Property<bool>("HasAdvancedSearch");

                    b.Property<bool>("HasMenu");

                    b.Property<bool>("HasSearch");

                    b.Property<int>("Id");

                    b.Property<string>("MainAction");

                    b.Property<string>("MainController");

                    b.Property<string>("MainMouseOver");

                    b.Property<string>("MainName");

                    b.Property<bool>("MenuAddShow");

                    b.Property<string>("MenuName");

                    b.Property<bool>("MenuShow");

                    b.Property<string>("MenuURL");

                    b.Property<string>("Name");

                    b.Property<bool>("SearchShow");

                    b.Property<int>("Sequence");

                    b.HasKey("UserMenuId");

                    b.ToTable("ZdbPreferenceLeftMenuEditGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuPreferenceLeftMenuGetAvailableMenusModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddAction");

                    b.Property<string>("AddController");

                    b.Property<string>("AddMouseOver");

                    b.Property<string>("AddName");

                    b.Property<string>("Description");

                    b.Property<bool>("HasAdd");

                    b.Property<bool>("HasAdvancedSearch");

                    b.Property<bool>("HasMenu");

                    b.Property<bool>("HasSearch");

                    b.Property<string>("MainAction");

                    b.Property<string>("MainController");

                    b.Property<string>("MainMouseOver");

                    b.Property<string>("MainName");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ZdbPreferenceLeftMenuGetAvailableMenus");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuPreferenceLeftMenuGetModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddAction");

                    b.Property<string>("AddController");

                    b.Property<string>("AddMouseOver");

                    b.Property<string>("AddName");

                    b.Property<bool>("AdvancedSearchShow");

                    b.Property<string>("Description");

                    b.Property<bool>("HasAdd");

                    b.Property<bool>("HasAdvancedSearch");

                    b.Property<bool>("HasMenu");

                    b.Property<bool>("HasSearch");

                    b.Property<string>("MainAction");

                    b.Property<string>("MainController");

                    b.Property<string>("MainMouseOver");

                    b.Property<string>("MainName");

                    b.Property<bool>("MenuAddShow");

                    b.Property<string>("MenuName");

                    b.Property<bool>("MenuShow");

                    b.Property<string>("MenuURL");

                    b.Property<string>("Name");

                    b.Property<bool>("SearchShow");

                    b.Property<int>("Sequence");

                    b.HasKey("Id");

                    b.ToTable("ZdbPreferenceLeftMenuGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessFieldModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTimeValue");

                    b.Property<int>("IntValue");

                    b.Property<int>("ProcessId");

                    b.Property<int>("ProcessTemplateFieldId");

                    b.Property<string>("StringValue");

                    b.HasKey("Id");

                    b.HasIndex("ProcessId");

                    b.HasIndex("ProcessTemplateFieldId");

                    b.ToTable("DbProcessField");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<int>("ProcessTemplateId");

                    b.Property<int>("StepId");

                    b.HasKey("Id");

                    b.HasIndex("ProcessTemplateId");

                    b.ToTable("DbProcess");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateFieldEditGetModel", b =>
                {
                    b.Property<int>("OId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<int>("LId");

                    b.Property<int>("LanguageId");

                    b.Property<string>("MenuName");

                    b.Property<string>("MouseOver");

                    b.Property<string>("Name");

                    b.Property<int>("PId");

                    b.Property<int>("ProcessTemplateFieldTypeId");

                    b.HasKey("OId");

                    b.ToTable("ZdbSuProcessTemplateFieldEditGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateFieldLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<string>("Description");

                    b.Property<int>("LanguageId");

                    b.Property<string>("MenuName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<string>("MouseOver")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<int>("ProcessTemplateFieldId");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ProcessTemplateFieldId");

                    b.ToTable("DbProcessTemplateFieldLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateFieldModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProcessTemplateFieldTypeId");

                    b.Property<int>("ProcessTemplateId");

                    b.Property<int?>("SuProcessModelId");

                    b.HasKey("Id");

                    b.HasIndex("ProcessTemplateFieldTypeId");

                    b.HasIndex("ProcessTemplateId");

                    b.HasIndex("SuProcessModelId");

                    b.ToTable("DbProcessTemplateField");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateFieldTypeLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<string>("Description");

                    b.Property<int>("FieldTypeId");

                    b.Property<int>("LanguageId");

                    b.Property<string>("MenuName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<string>("MouseOver")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("FieldTypeId");

                    b.HasIndex("LanguageId");

                    b.ToTable("DbProcessTemplateFieldTypeLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateFieldTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("DbProcessTemplateFieldType");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateFlowConditionEditGetModel", b =>
                {
                    b.Property<int>("OId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ComparisonOperatorId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Creator");

                    b.Property<int?>("DataTypeId");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("LId");

                    b.Property<int>("LanguageId");

                    b.Property<string>("MenuName")
                        .IsRequired();

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Modifier");

                    b.Property<string>("MouseOver")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("ProcessTemplateConditionTypeId");

                    b.Property<int?>("ProcessTemplateFieldId");

                    b.Property<DateTime>("ProcessTemplateFlowConditionDate");

                    b.Property<int?>("ProcessTemplateFlowConditionInt");

                    b.Property<string>("ProcessTemplateFlowConditionString");

                    b.HasKey("OId");

                    b.ToTable("ZdbProcessTemplateFlowConditionEditGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateFlowConditionLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<string>("Description");

                    b.Property<int>("FlowConditionId");

                    b.Property<int>("LanguageId");

                    b.Property<string>("MenuName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<string>("MouseOver")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("FlowConditionId");

                    b.HasIndex("LanguageId");

                    b.ToTable("DbProcessTemplateFlowConditionLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateFlowConditionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ComparisonOperatorId");

                    b.Property<int?>("DataTypeId");

                    b.Property<int>("ProcessTemplateConditionTypeId");

                    b.Property<int?>("ProcessTemplateFieldId");

                    b.Property<DateTime?>("ProcessTemplateFlowConditionDate");

                    b.Property<int?>("ProcessTemplateFlowConditionInt");

                    b.Property<string>("ProcessTemplateFlowConditionString");

                    b.Property<int>("ProcessTemplateFlowId");

                    b.HasKey("Id");

                    b.HasIndex("ProcessTemplateConditionTypeId");

                    b.HasIndex("ProcessTemplateFlowId");

                    b.ToTable("DbProcessTemplateFlowCondition");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateFlowConditionTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("DbProcessTemplateFlowConditionType");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateFlowLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<string>("Description");

                    b.Property<int>("FlowId");

                    b.Property<int>("LanguageId");

                    b.Property<string>("MenuName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<string>("MouseOver")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("FlowId");

                    b.HasIndex("LanguageId");

                    b.ToTable("DbProcessTemplateFlowLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateFlowModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProcessTemplateFromStepId");

                    b.Property<int>("ProcessTemplateId");

                    b.Property<int>("ProcessTemplateToStepId");

                    b.HasKey("Id");

                    b.HasIndex("ProcessTemplateId");

                    b.ToTable("DbProcessTemplateFlow");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateGroupLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<string>("Description");

                    b.Property<int?>("FlowId");

                    b.Property<int>("LanguageId");

                    b.Property<string>("MenuName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<string>("MouseOver")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<int>("ProcessTemplateGroupId");

                    b.HasKey("Id");

                    b.HasIndex("FlowId");

                    b.HasIndex("LanguageId");

                    b.ToTable("DbProcessTemplateGroupLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateGroupModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<int>("Sequence");

                    b.HasKey("Id");

                    b.ToTable("DbProcessTemplateGroup");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<string>("Description")
                        .HasMaxLength(50);

                    b.Property<int>("LanguageId");

                    b.Property<string>("MenuName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<string>("MouseOver")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<int?>("ProcessTemplateGroupId");

                    b.Property<int>("ProcessTemplateId");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ProcessTemplateGroupId");

                    b.ToTable("DbProcessTemplateLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<int>("ProcessTemplateGroupId");

                    b.Property<bool>("ShowInEventCalendar");

                    b.Property<bool>("ShowInPersonalCalendar");

                    b.HasKey("Id");

                    b.HasIndex("ProcessTemplateGroupId");

                    b.ToTable("DbProcessTemplate");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateStepFieldModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FieldId");

                    b.Property<int>("Sequence");

                    b.Property<int>("StatusId");

                    b.Property<int>("StepId");

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.HasIndex("StatusId");

                    b.HasIndex("StepId");

                    b.ToTable("DbProcessTemplateStepField");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateStepFieldStatusModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("DbProcessTemplateStepFieldStatus");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateStepLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<string>("Description");

                    b.Property<int>("LanguageId");

                    b.Property<string>("MenuName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<string>("MouseOver")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<int>("StepId");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("StepId");

                    b.ToTable("DbProcessTemplateStepLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateStepModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProcessTemplateId");

                    b.Property<int>("ProcessTemplateStepTypeId");

                    b.HasKey("Id");

                    b.HasIndex("ProcessTemplateId");

                    b.HasIndex("ProcessTemplateStepTypeId");

                    b.ToTable("DbProcessTemplateStep");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateStepTypeLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<string>("Description");

                    b.Property<int>("LanguageId");

                    b.Property<string>("MenuName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<string>("MouseOver")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<int>("StepTypeId");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("StepTypeId");

                    b.ToTable("dbProcessTemplateStepTypeLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateStepTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("dbProcessTemplateStepType");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProjectLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<string>("Description");

                    b.Property<int>("LanguageId");

                    b.Property<string>("MenuName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<string>("MouseOver")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<int>("ProjectId");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ProjectId");

                    b.ToTable("DbProjectLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProjectModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<int?>("ParentProjectId");

                    b.Property<int>("ProjectStatusId");

                    b.HasKey("Id");

                    b.HasIndex("ProjectStatusId");

                    b.ToTable("DbProject");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProjectStatusModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("DbProjectStatus");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuSecurityLevelList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("DbSecurityLevelList");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuSecurityLevelModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("DbSecurityLevel");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuSettingModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateTimeValue");

                    b.Property<Guid?>("GuidValue");

                    b.Property<int?>("IntValue");

                    b.Property<string>("SettingDescription");

                    b.Property<string>("SettingName");

                    b.Property<string>("StringValue");

                    b.HasKey("Id");

                    b.ToTable("DbSetting");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuStatusList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ZDbStatusList");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuTermLanguageCreateGetModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Customization");

                    b.Property<int>("LanguageId");

                    b.HasKey("Id");

                    b.ToTable("ZdbTermLanguageCreateGetWith");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuTypeList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ZDbTypeList");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuUIScreenModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action");

                    b.Property<string>("Controller");

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("DbUIScreen");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuUITermLanguageEditGetModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Customization");

                    b.Property<int>("LanguageId");

                    b.Property<string>("LanguageName");

                    b.Property<string>("Name");

                    b.Property<int>("TermId");

                    b.HasKey("Id");

                    b.ToTable("ZDbUITermLanguageEditGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuUITermLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Customization");

                    b.Property<int>("LanguageId");

                    b.Property<int>("TermId");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("TermId");

                    b.ToTable("DbUITermLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuUITermList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ZDbUITermList");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuUITermModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("DbUITerm");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuUITermScreenModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ScreenId");

                    b.Property<int>("Sequence");

                    b.Property<int>("TermId");

                    b.HasKey("Id");

                    b.HasIndex("ScreenId");

                    b.HasIndex("TermId");

                    b.ToTable("DbUITermScreen");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuUserModel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<int?>("CountryId");

                    b.Property<int>("DefaultLanguageId");

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("ManagerId");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<int>("SecurityLevel");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuUserOrganizationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<int>("OrganizationId");

                    b.Property<int>("TypeId");

                    b.Property<string>("UserId")
                        .HasMaxLength(450);

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("TypeId");

                    b.HasIndex("UserId");

                    b.ToTable("DbUserOrganization");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuUserOrganizationTypeLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<string>("Description");

                    b.Property<int>("LanguageId");

                    b.Property<string>("MenuName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<string>("MouseOver")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<int>("TypeId");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("TypeId");

                    b.ToTable("DbUserOrganizationTypeLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuUserOrganizationTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("DbUserOrganizationType");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuUserProjectModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<int>("ProjectId");

                    b.Property<int>("TypeId");

                    b.Property<string>("UserId")
                        .HasMaxLength(450);

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TypeId");

                    b.HasIndex("UserId");

                    b.ToTable("DbUserProject");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuUserProjectTypeLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<string>("Description");

                    b.Property<int>("LanguageId");

                    b.Property<string>("MenuName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<string>("MouseOver")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<int>("TypeId");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("TypeId");

                    b.ToTable("DbUserProjectTypeLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuUserProjectTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("DbUserProjectType");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuUserRelationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<string>("FromUserId")
                        .HasMaxLength(450);

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<string>("ToUserId")
                        .HasMaxLength(450);

                    b.Property<int>("TypeId");

                    b.HasKey("Id");

                    b.HasIndex("FromUserId");

                    b.HasIndex("ToUserId");

                    b.HasIndex("TypeId");

                    b.ToTable("DbUserRelation");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuUserRelationTypeIndexGetModel", b =>
                {
                    b.Property<int>("OId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FromIsOfToDescription");

                    b.Property<string>("FromIsOfToMenuName");

                    b.Property<string>("FromIsOfToMouseOver");

                    b.Property<string>("FromIsOfToName");

                    b.Property<string>("ToIsOfFromDescription");

                    b.Property<string>("ToIsOfFromMenuName");

                    b.Property<string>("ToIsOfFromMouseOver");

                    b.Property<string>("ToIsOfFromName");

                    b.HasKey("OId");

                    b.ToTable("ZdbUserRelationTypeIndexGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuUserRelationTypeLanguageDeleteGetModel", b =>
                {
                    b.Property<int>("LId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Creator");

                    b.Property<string>("FromIsOfToDescription")
                        .IsRequired();

                    b.Property<string>("FromIsOfToMenuName")
                        .IsRequired();

                    b.Property<string>("FromIsOfToMouseOver");

                    b.Property<string>("FromIsOfToName");

                    b.Property<string>("Language");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Modifier");

                    b.Property<string>("ToIsOfFromDescription")
                        .IsRequired();

                    b.Property<string>("ToIsOfFromMenuName")
                        .IsRequired();

                    b.Property<string>("ToIsOfFromMouseOver")
                        .IsRequired();

                    b.Property<string>("ToIsOfFromName");

                    b.HasKey("LId");

                    b.ToTable("ZdbUserRelationTypeLanguageDeleteGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuUserRelationTypeLanguageEditGetModel", b =>
                {
                    b.Property<int>("LId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Creator");

                    b.Property<string>("FromIsOfToDescription")
                        .IsRequired();

                    b.Property<string>("FromIsOfToMenuName")
                        .IsRequired();

                    b.Property<string>("FromIsOfToMouseOver");

                    b.Property<string>("FromIsOfToName");

                    b.Property<string>("Language");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Modifier");

                    b.Property<int>("OId");

                    b.Property<string>("ToIsOfFromDescription")
                        .IsRequired();

                    b.Property<string>("ToIsOfFromMenuName")
                        .IsRequired();

                    b.Property<string>("ToIsOfFromMouseOver")
                        .IsRequired();

                    b.Property<string>("ToIsOfFromName");

                    b.HasKey("LId");

                    b.ToTable("ZdbUserRelationTypeLanguageEditGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuUserRelationTypeLanguageIndexGetModel", b =>
                {
                    b.Property<int>("LId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FromIsOfToDescription")
                        .IsRequired();

                    b.Property<string>("FromIsOfToMenuName")
                        .IsRequired();

                    b.Property<string>("FromIsOfToMouseOver");

                    b.Property<string>("FromIsOfToName");

                    b.Property<int>("LanguageId");

                    b.Property<string>("LanguageName");

                    b.Property<int>("OId");

                    b.Property<string>("ToIsOfFromDescription")
                        .IsRequired();

                    b.Property<string>("ToIsOfFromMenuName")
                        .IsRequired();

                    b.Property<string>("ToIsOfFromMouseOver")
                        .IsRequired();

                    b.Property<string>("ToIsOfFromName");

                    b.HasKey("LId");

                    b.ToTable("ZdbUserRelationTypeLanguageIndexGet");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuUserRelationTypeLanguageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreatorId");

                    b.Property<string>("FromIsOfToDescription");

                    b.Property<string>("FromIsOfToMenuName")
                        .HasMaxLength(50);

                    b.Property<string>("FromIsOfToMouseOver")
                        .HasMaxLength(50);

                    b.Property<string>("FromIsOfToName")
                        .HasMaxLength(50);

                    b.Property<int>("LanguageId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ModifierId");

                    b.Property<string>("ToIsOfFromDescription");

                    b.Property<string>("ToIsOfFromMenuName")
                        .HasMaxLength(50);

                    b.Property<string>("ToIsOfFromMouseOver")
                        .HasMaxLength(50);

                    b.Property<string>("ToIsOfFromName")
                        .HasMaxLength(50);

                    b.Property<int>("TypeId");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("TypeId");

                    b.ToTable("DbUserRelationTypeLanguage");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuUserRelationTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("DbUserRelationType");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuValueList", b =>
                {
                    b.Property<int>("ClassificationValueId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ClassificationValueId");

                    b.ToTable("DbValueList");
                });

            modelBuilder.Entity("StudentUnion0105.Models.TopMenu1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IconCss");

                    b.Property<string>("MenuAction");

                    b.Property<string>("MenuController");

                    b.Property<int>("MenuDestinationId");

                    b.Property<string>("MenuName");

                    b.HasKey("Id");

                    b.ToTable("ZdbTopMenu1");
                });

            modelBuilder.Entity("StudentUnion0105.SPModel.GetProjectStructure+SuGetProjectStructure", b =>
                {
                    b.Property<string>("Path")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Id");

                    b.Property<int>("Level");

                    b.Property<string>("Name");

                    b.Property<int>("ParentId");

                    b.HasKey("Path");

                    b.ToTable("DbGetProjectStructure");
                });

            modelBuilder.Entity("StudentUnion0105.SPModel.SuClassificationValueIndexGet", b =>
                {
                    b.Property<string>("Path")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ClassificationId");

                    b.Property<int>("Id");

                    b.Property<int>("Level");

                    b.Property<string>("Name");

                    b.Property<int>("ParentId");

                    b.HasKey("Path");

                    b.ToTable("ZdbClassificationValueIndexGet");
                });

            modelBuilder.Entity("StudentUnion0105.SPModel.SuOrganizationIndexGet", b =>
                {
                    b.Property<string>("Path")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Id");

                    b.Property<int>("Level");

                    b.Property<string>("Name");

                    b.Property<int>("ParentId");

                    b.HasKey("Path");

                    b.ToTable("ZdbOrganizationIndexGet");
                });

            modelBuilder.Entity("StudentUnion0105.ViewModels.SuIdWithStrings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("DbIdWithStrings");
                });

            modelBuilder.Entity("StudentUnion0105.ViewModels.SuObjectVM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Alphabetically");

                    b.Property<bool>("CanLink");

                    b.Property<DateTimeOffset?>("DateFrom");

                    b.Property<int>("DateLevel");

                    b.Property<DateTimeOffset?>("DateTo");

                    b.Property<string>("Description");

                    b.Property<string>("Description2");

                    b.Property<string>("DropDownName");

                    b.Property<bool>("HasDropDown");

                    b.Property<string>("HeaderDescription");

                    b.Property<string>("HeaderName");

                    b.Property<bool>("InDropDown");

                    b.Property<bool>("IndexSection");

                    b.Property<string>("Language");

                    b.Property<int>("LanguageId");

                    b.Property<int>("Level");

                    b.Property<string>("MenuName");

                    b.Property<string>("MouseOver");

                    b.Property<string>("Name");

                    b.Property<int>("NotNullId");

                    b.Property<int>("NotNullId2");

                    b.Property<int?>("NullId");

                    b.Property<int?>("NullId2");

                    b.Property<int>("ObjectId");

                    b.Property<int>("ObjectLanguageId");

                    b.Property<bool>("OnTheFly");

                    b.Property<string>("PageDescription");

                    b.Property<int>("Sequence");

                    b.Property<int>("Status");

                    b.Property<string>("Title");

                    b.Property<string>("TopicName");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.ToTable("DbObjectVM");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuUserModel")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuUserModel")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuUserModel")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuUserModel")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.Menu2", b =>
                {
                    b.HasOne("StudentUnion0105.Models.Menu1", "Menu1")
                        .WithMany("Menu2")
                        .HasForeignKey("PId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.Menu3", b =>
                {
                    b.HasOne("StudentUnion0105.Models.Menu2", "Menu2")
                        .WithMany("Menu3")
                        .HasForeignKey("PId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuClassificationModel", "Classification")
                        .WithMany("ClassificationLanguages")
                        .HasForeignKey("ClassificationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany("ClassificationLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationLevelLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuClassificationLevelModel", "ClassificationLevel")
                        .WithMany("ClassificationLevelLanguages")
                        .HasForeignKey("ClassificationLevelId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany("ClassificationLevelLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationLevelModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuClassificationModel", "Classification")
                        .WithMany("ClassificationLevels")
                        .HasForeignKey("ClassificationId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuClassificationStatusModel", "ClassificationStatus")
                        .WithMany("Classifications")
                        .HasForeignKey("ClassificationStatusId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationPageLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuClassificationPageModel", "ClassificationPage")
                        .WithMany("PageLanguages")
                        .HasForeignKey("ClassificationPageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationPageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuClassificationModel", "Classification")
                        .WithMany()
                        .HasForeignKey("ClassificationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationPageSectionLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "PageLanguage")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuClassificationPageSectionModel", "PageSection")
                        .WithMany("ClassificationPageSectionLanguages")
                        .HasForeignKey("PageSectionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationPageSectionModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuClassificationPageModel", "ClassificationPage")
                        .WithMany()
                        .HasForeignKey("ClassificationPageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuContentTypeModel", "ContentType")
                        .WithMany()
                        .HasForeignKey("ContentTypeId");

                    b.HasOne("StudentUnion0105.Models.SuPageSectionTypeModel", "PageSectionType")
                        .WithMany()
                        .HasForeignKey("SectionTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationValueLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuClassificationValueModel", "ClassificationValue")
                        .WithMany("ClassificationValueLanguages")
                        .HasForeignKey("ClassificationValueId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany("ClassificationValueLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuClassificationValueModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuClassificationModel", "Classification")
                        .WithMany("ClassificationValues")
                        .HasForeignKey("ClassificationId")
                        .HasConstraintName("FKClassificationValues")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuContentClassificationValueModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuClassificationValueModel", "ClassificationValue")
                        .WithMany()
                        .HasForeignKey("ClassificationValueId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuContentModel", "Content")
                        .WithMany("ContentClassificationValues")
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuContentModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuContentStatusModel", "ContentStatus")
                        .WithMany("Contents")
                        .HasForeignKey("ContentStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuContentTypeModel", "ContentType")
                        .WithMany("Contents")
                        .HasForeignKey("ContentTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuOrganizationModel", "Organizaton")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuProjectModel", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.HasOne("StudentUnion0105.Models.SuSecurityLevelModel", "SecurityLevelObject")
                        .WithMany("Contents")
                        .HasForeignKey("SecurityLevel")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuProcessTemplateStepFieldStatusModel")
                        .WithMany("SuProcessTemplateStepFieldModel")
                        .HasForeignKey("SuProcessTemplateStepFieldStatusModelId");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuContentTypeLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuContentTypeModel", "ContentType")
                        .WithMany("ContentTypeLanguages")
                        .HasForeignKey("ContentTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany("ContentTypeLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuFrontContentModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuFrontPageSectionModel", "FrontPageSection")
                        .WithMany("FrontContent")
                        .HasForeignKey("PId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuFrontPageSectionModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuFrontPageModel", "FrontPage")
                        .WithMany("FrontPageSections")
                        .HasForeignKey("PId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuFrontProcessCreateGetFieldModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuFrontProcessCreateGetModel", "FrontProcess")
                        .WithMany("ProcessFields")
                        .HasForeignKey("PId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuFrontProcessIndexGetTemplateModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuFrontProcessIndexGetTemplateGroupModel", "FrontProcessTemplateGroup")
                        .WithMany("FrontProcessTemplates")
                        .HasForeignKey("PId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuLeftMenuLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuLeftMenuModel", "LeftMenu")
                        .WithMany("LeftMenuLanguages")
                        .HasForeignKey("LeftMenuId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuLeftMenuUserModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuLeftMenuModel", "LeftMenu")
                        .WithMany("LeftMenuUser")
                        .HasForeignKey("LeftMenuId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuMenu1LanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuMenu1Model", "Menu1")
                        .WithMany("Menu1Languages")
                        .HasForeignKey("Menu1Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuMenu1Model", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuMenuTypeModel", "MenuType")
                        .WithMany("Menu1")
                        .HasForeignKey("MenuTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuMenu2LanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuMenu2Model", "Menu2")
                        .WithMany("Menu2Languages")
                        .HasForeignKey("Menu1Id");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuMenu2Model", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuMenu1Model", "Menu1")
                        .WithMany("Menu2")
                        .HasForeignKey("Menu1Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuMenuTypeModel", "MenuType")
                        .WithMany("Menu2")
                        .HasForeignKey("MenuTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuMenu3LanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuMenu3Model", "Menu3")
                        .WithMany("Menu3Languages")
                        .HasForeignKey("Menu1Id");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuMenu3Model", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuMenu2Model", "Menu2")
                        .WithMany("Menu3")
                        .HasForeignKey("Menu2Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuMenuTypeModel", "MenuType")
                        .WithMany("Menu3")
                        .HasForeignKey("MenuTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuOrganizationLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany("OrganizationLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuOrganizationModel", "Organization")
                        .WithMany("OrganizationLanguages")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuOrganizationModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuOrganizationStatusModel", "OrganizationStatus")
                        .WithMany("Organization")
                        .HasForeignKey("OrganizationStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuOrganizationTypeModel", "OrganizationType")
                        .WithMany("Organizations")
                        .HasForeignKey("OrganizationTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuOrganizationModel", "ParentOrganization")
                        .WithMany("ChildOrganizations")
                        .HasForeignKey("ParentOrganizationId");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuOrganizationTypeLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany("OrganizationTypeLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuOrganizationTypeModel", "OrganizationType")
                        .WithMany("OrganizationTypeLanguages")
                        .HasForeignKey("OrganizationTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuPageLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuPageModel", "Page")
                        .WithMany("PageLanguages")
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuPageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuPageStatusModel", "PageStatus")
                        .WithMany("Pages")
                        .HasForeignKey("PageStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuPageTypeModel", "PageType")
                        .WithMany("Pages")
                        .HasForeignKey("PageTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuPageSectionLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "PageLanguage")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuPageSectionModel", "PageSection")
                        .WithMany("PageSectionLanguages")
                        .HasForeignKey("PageSectionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuPageSectionModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuContentTypeModel", "ContentType")
                        .WithMany()
                        .HasForeignKey("ContentTypeId");

                    b.HasOne("StudentUnion0105.Models.SuPageModel", "Page")
                        .WithMany("PageSections")
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuPageSectionTypeModel", "PageSectionType")
                        .WithMany("PageSections")
                        .HasForeignKey("PageSectionTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuPageSectionTypeLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuPageSectionTypeModel", "PageType")
                        .WithMany("PageSectionTypeLanguages")
                        .HasForeignKey("PageTypeId");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuPageTypeLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuPageTypeModel", "PageType")
                        .WithMany("PageTypeLanguages")
                        .HasForeignKey("PageTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessFieldModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuProcessModel", "Process")
                        .WithMany()
                        .HasForeignKey("ProcessId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuProcessTemplateFieldModel", "ProcessTemplateField")
                        .WithMany()
                        .HasForeignKey("ProcessTemplateFieldId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuProcessTemplateModel", "ProcessTemplate")
                        .WithMany()
                        .HasForeignKey("ProcessTemplateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateFieldLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuProcessTemplateFieldModel", "ProcessTemplateField")
                        .WithMany("ProcessTemplateFieldLanguages")
                        .HasForeignKey("ProcessTemplateFieldId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateFieldModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuProcessTemplateFieldTypeModel", "ProcessTemplateFieldType")
                        .WithMany("ProcessTemplateField")
                        .HasForeignKey("ProcessTemplateFieldTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuProcessTemplateModel", "ProcessTemplate")
                        .WithMany()
                        .HasForeignKey("ProcessTemplateId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuProcessModel")
                        .WithMany("ProcessTemplateField")
                        .HasForeignKey("SuProcessModelId");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateFieldTypeLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuProcessTemplateFieldTypeModel", "ProcessTemplateFieldType")
                        .WithMany("ProcessTemplateFieldTypeLanguages")
                        .HasForeignKey("FieldTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateFlowConditionLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuProcessTemplateFlowConditionModel", "ProcessTemplateFlowCondition")
                        .WithMany("ProcessTemplateFlowConditionLanguages")
                        .HasForeignKey("FlowConditionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateFlowConditionModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuProcessTemplateFlowConditionTypeModel", "ProcessTemplateFlowConditionType")
                        .WithMany("ProcessTemplateFlowConditions")
                        .HasForeignKey("ProcessTemplateConditionTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuProcessTemplateFlowModel", "ProcessTemplateFlow")
                        .WithMany("ProcessTemplateFlowCondition")
                        .HasForeignKey("ProcessTemplateFlowId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateFlowLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuProcessTemplateFlowModel", "ProcessTemplateFlow")
                        .WithMany("ProcessTemplateFlowLanguages")
                        .HasForeignKey("FlowId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateFlowModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuProcessTemplateModel", "ProcessTemplate")
                        .WithMany()
                        .HasForeignKey("ProcessTemplateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateGroupLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuProcessTemplateGroupModel", "ProcessTemplateGroup")
                        .WithMany("ProcessTemplateGroupLanguages")
                        .HasForeignKey("FlowId");

                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuProcessTemplateGroupModel", "ProcessTemplateGroup")
                        .WithMany()
                        .HasForeignKey("ProcessTemplateGroupId");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuProcessTemplateGroupModel", "ProcessTemplateGroup")
                        .WithMany("ProcessTemplates")
                        .HasForeignKey("ProcessTemplateGroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateStepFieldModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuProcessTemplateFieldModel", "ProcessTemplateField")
                        .WithMany("ProcessTemplateFieldSteps")
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuProcessTemplateStepFieldStatusModel", "ProcessTemplateStepFieldStatus")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuProcessTemplateStepModel", "ProcessTemplateStep")
                        .WithMany("ProcessTemplateStepFields")
                        .HasForeignKey("StepId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateStepLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuProcessTemplateStepModel", "ProcessTemplateStep")
                        .WithMany("ProcessTemplateStepLanguages")
                        .HasForeignKey("StepId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateStepModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuProcessTemplateModel", "ProcessTemplate")
                        .WithMany()
                        .HasForeignKey("ProcessTemplateId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuProcessTemplateStepTypeModel", "ProcessTemplateStepType")
                        .WithMany("ProcessTemplateSteps")
                        .HasForeignKey("ProcessTemplateStepTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProcessTemplateStepTypeLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuProcessTemplateStepTypeModel", "ProcessTemplateStepType")
                        .WithMany()
                        .HasForeignKey("StepTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProjectLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany("ProjectLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuProjectModel", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuProjectModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuProjectStatusModel", "ProjectStatus")
                        .WithMany("Projects")
                        .HasForeignKey("ProjectStatusId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuUITermLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuUITermModel", "Term")
                        .WithMany("TermLanguages")
                        .HasForeignKey("TermId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuUITermScreenModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuUIScreenModel", "Screen")
                        .WithMany("TermScreen")
                        .HasForeignKey("ScreenId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuUITermModel", "Term")
                        .WithMany()
                        .HasForeignKey("TermId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuUserOrganizationModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuOrganizationModel", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuUserOrganizationTypeModel", "Type")
                        .WithMany("UserOrganizations")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuUserModel", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuUserOrganizationTypeLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuUserOrganizationTypeModel", "Type")
                        .WithMany("UserOrganizationTypLanguages")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuUserProjectModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuProjectModel", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuUserProjectTypeModel", "Type")
                        .WithMany("UserProjects")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuUserModel", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuUserProjectTypeLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuUserProjectTypeModel", "Type")
                        .WithMany("UserProjectTypLanguages")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuUserRelationModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuUserModel", "FromUser")
                        .WithMany()
                        .HasForeignKey("FromUserId");

                    b.HasOne("StudentUnion0105.Models.SuUserModel", "ToUser")
                        .WithMany()
                        .HasForeignKey("ToUserId");

                    b.HasOne("StudentUnion0105.Models.SuUserRelationTypeModel", "Type")
                        .WithMany("UserRelations")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StudentUnion0105.Models.SuUserRelationTypeLanguageModel", b =>
                {
                    b.HasOne("StudentUnion0105.Models.SuLanguageModel", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StudentUnion0105.Models.SuUserRelationTypeModel", "Type")
                        .WithMany("UserRelationTypLanguages")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
